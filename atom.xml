<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>半生不熟</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.wdanna.com/"/>
  <updated>2018-10-14T13:34:43.000Z</updated>
  <id>https://www.wdanna.com/</id>
  
  <author>
    <name>Danna</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML 那些事儿</title>
    <link href="https://www.wdanna.com/HTML%20%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    <id>https://www.wdanna.com/HTML 那些事儿/</id>
    <published>2018-10-14T13:34:43.000Z</published>
    <updated>2018-10-14T13:34:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、第一个需求"><a href="#1、第一个需求" class="headerlink" title="1、第一个需求"></a>1、第一个需求</h3><p><img src="http://upload-images.jianshu.io/upload_images/2190281-3b033c3e71a07603.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="HTML—列表"></p><h3 id="我的思考"><a href="#我的思考" class="headerlink" title="我的思考"></a>我的思考</h3><ul><li>最外层的是两个<strong>无序列表</strong>（<code>&lt;ul&gt;标签</code>）</li><li>靠近最外层的分别是两个<strong>有序列表（<code>&lt;ol&gt;标签</code>）</strong></li><li>最里层的也是<strong>无序列表</strong>（<code>&lt;ul&gt;标签</code>），这里应有一个<code>type=“square”</code>的属性</li><li>所有列表项目都需要使用<code>&lt;li&gt; 标签</code></li></ul><h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><p><img src="http://upload-images.jianshu.io/upload_images/2190281-1f274004267dfa07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的效果"></p><h3 id="错误纠正"><a href="#错误纠正" class="headerlink" title="错误纠正"></a>错误纠正</h3><p>对于开始理解的无序列表添加<code>type=“square”</code>的属性那块，在这里是不需要加的，因为默认的无序列表的嵌套结构是这样的，<br><img src="http://upload-images.jianshu.io/upload_images/2190281-0f48022a360ed071.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="从第三层开始默认的样式就是`square`，所以不用加样式"><br>实现代码请访问我的 <a href="https://github.com/banshengbushu/HTML_BASIC/blob/master/html-list.html" target="_blank" rel="noopener">Github</a></p><h3 id="3、第二个需求"><a href="#3、第二个需求" class="headerlink" title="3、第二个需求"></a>3、第二个需求</h3><p><img src="http://upload-images.jianshu.io/upload_images/2190281-a065ded03c3dd373.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="HTML-表格"></p><h3 id="我的思考-1"><a href="#我的思考-1" class="headerlink" title="我的思考"></a>我的思考</h3><ul><li>表格分为标题（<code>&lt;caption&gt;标签</code>）和表格主体内容部分（5行4列）</li><li>表格主体内容部分首先要有边框（设置<code>border</code>属性）</li><li>表格相关的标签有<ul><li>表格— <code>&lt;table&gt;</code>标签</li><li>表格的行—<code>&lt;tr&gt;</code>标签</li><li>每行被分为若干单元格—<code>&lt;td&gt;</code>标签</li><li>表格需要进行跨行（<code>rowspan</code>）、跨列（<code>colspan</code>）合并</li><li>表格有些内容需要居中显示</li></ul></li></ul><h3 id="实现效果-1"><a href="#实现效果-1" class="headerlink" title="实现效果"></a>实现效果</h3><p><img src="http://upload-images.jianshu.io/upload_images/2190281-4bf3ab76312c50fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的表格"></p><p>实现代码请访问我的<a href="https://github.com/banshengbushu/HTML_BASIC/blob/master/html-table.html" target="_blank" rel="noopener">Github</a></p><h3 id="2、第三个需求"><a href="#2、第三个需求" class="headerlink" title="2、第三个需求"></a>2、第三个需求</h3><p><img src="http://upload-images.jianshu.io/upload_images/2190281-0ecab4110fd8daf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="HTML-UML试卷"></p><h3 id="我的思考-2"><a href="#我的思考-2" class="headerlink" title="我的思考"></a>我的思考</h3><ul><li>大致浏览下，应分为7部分—标题、卷头、一～五个大题</li><li>看着卷子，要想到会使用到的标签<ul><li><code>&lt;h1&gt;</code>—标题</li><li><code>&lt;span&gt;</code>—用来组合文档中的行内元素</li><li><code>&lt;input&gt;</code>—输入框，可通过改变<code>type</code>变成<code>checkbox</code>复选框</li><li><code>&lt;ol&gt;</code>—有序列表，在小标题时使用</li><li><code>&lt;textarea&gt;</code>—标签定义多行的文本输入控件</li></ul></li></ul><h3 id="实现效果-2"><a href="#实现效果-2" class="headerlink" title="实现效果"></a>实现效果</h3><p><img src="http://upload-images.jianshu.io/upload_images/2190281-a80e155abd020d33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的效果"></p><p>实现代码请访问我的<a href="https://github.com/banshengbushu/HTML_BASIC/blob/master/UML-paper.html" target="_blank" rel="noopener">Github</a></p><h3 id="更多HTML学习资源与工具"><a href="#更多HTML学习资源与工具" class="headerlink" title="更多HTML学习资源与工具"></a>更多HTML学习资源与工具</h3><ul><li>html在线验证：<a href="http://www.freeformatter.com/html-validator.html" target="_blank" rel="noopener">http://www.freeformatter.com/html-validator.html</a>(该网站上还有很多别的工具）</li><li>html在线格式化代码：<a href="http://www.cleancss.com/html-beautify/" target="_blank" rel="noopener">http://www.cleancss.com/html-beautify/</a></li><li>W3School上的HTML基础教程：<a href="http://www.w3school.com.cn/html/index.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/html/index.asp</a></li><li>Html5新特性：<a href="http://www.w3school.com.cn/html5/index.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/html5/index.asp</a></li><li>CodeForDream上提供的HTML课程：<a href="http://www.codefordream.com/courses/html_basic/sections" target="_blank" rel="noopener">http://www.codefordream.com/courses/html_basic/sections</a></li></ul><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、第一个需求&quot;&gt;&lt;a href=&quot;#1、第一个需求&quot; class=&quot;headerlink&quot; title=&quot;1、第一个需求&quot;&gt;&lt;/a&gt;1、第一个需求&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_i
      
    
    </summary>
    
      <category term="Web 前端" scheme="https://www.wdanna.com/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>发现更大的世界 - 知乎2018</title>
    <link href="https://www.wdanna.com/%E5%8F%91%E7%8E%B0%E6%9B%B4%E5%A4%A7%E7%9A%84%E4%B8%96%E7%95%8C/"/>
    <id>https://www.wdanna.com/发现更大的世界/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>仅收录知乎发布的 2018 全新品牌视频「发现更大的世界」</strong></p></blockquote><p><strong>我们是从什么时候开始</strong></p><p><strong>不再向世界抛出问题的？</strong></p><p>像罐头里的沙丁鱼、保温杯里的白开水</p><p>在两点一线的日常里压缩、装罐、保持常温</p><p>有些麻木、有点无趣</p><p>为什么人容易在洗澡的时候思考人生？</p><p>月薪 6000 如何平衡生活与兴趣的关系？</p><p>如果太阳熄灭，人类要如何生活？</p><p>我们曾对这个世界好奇过</p><p>但最后又选择了接受规则</p><p>思考人生，不如思考房价和婚期</p><p>平衡生活与兴趣，不如平衡年龄与存款</p><p>担忧人类的生活，不如先担忧自己的生存</p><p>发现了吗？</p><p>为什么充满灵性的是小孩？</p><p>因为小孩对世界饱含着好奇与疑问</p><p>为什么有的大人不再有趣？</p><p>因为大人们相信既定的规则和所谓的标准答案</p><p>他们追求「实用」</p><p>而不再好奇「未知」、不再轻易「尝试」</p><p>可这世界上</p><p>时过境迁的从来都是「答案」</p><p>历久弥新的永远都是「问题」</p><p>我们对已知的天地了如指掌</p><p>是否忘了也要对未知的世界怀抱想象？</p><p>已知的太少，未知的太多</p><p>越学习，世界的边界似乎逐渐在缩小</p><p>但越好奇，世界的轮廓又的确在伸张</p><p>成为一个有趣的大人一点儿也不难</p><p>把「规则」与「标准」</p><p>换成「好奇」与「热情」就好</p><p>去无畏地保持疑问并直面问题就好</p><p>去热情地拥抱世界且享受尝试就好</p><p>毕竟</p><p>每一个「大的世界」</p><p>都是从一个「小的好奇」开始的</p><p>更大的世界是什么？</p><p>是未知</p><p>是生活在已知的信息中</p><p>被好奇驱动着去发现未知的一切</p><p>更有趣的人是什么样的？</p><p>是不满足于已有认知</p><p>不禁锢于传统思维与观念</p><p>对世界仍保持好奇与独立思考的「新知青年」</p><p>希望我们</p><p>都成为拥有好奇心与想象力的大人</p><p>做独立思考与探索更多的新知青年</p><p>成为不断发现更大世界的有趣人类</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;仅收录知乎发布的 2018 全新品牌视频「发现更大的世界」&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;我们是从什么时候开始&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不再向世界抛出问题的？&lt;/
      
    
    </summary>
    
      <category term="黄昏见证了最忠实的信徒" scheme="https://www.wdanna.com/%E9%BB%84%E6%98%8F%E8%A7%81%E8%AF%81%E4%BA%86%E6%9C%80%E5%BF%A0%E5%AE%9E%E7%9A%84%E4%BF%A1%E5%BE%92/"/>
    
    
  </entry>
  
  <entry>
    <title>20岁,有五个女孩...</title>
    <link href="https://www.wdanna.com/20%E5%B2%81,%E6%9C%89%E4%BA%94%E4%B8%AA%E5%A5%B3%E5%AD%A9.../"/>
    <id>https://www.wdanna.com/20岁,有五个女孩.../</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>毕业照只用了四秒 却定格了四年的青春</strong></p></blockquote><p>2013年9月15日，我们相见，到今天2017年6月13日，整整1367天的日子，慢慢地，我们要开始离开，四年，像一场电影，说长也长，说短也短，四年的故事就这样定格了在这拍了不到四秒的照片里。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-f6766f919c322985.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="时光啊怎么这么快"></p><p>或许五年，或许十年，我们再见，脸上会带着笑，带着沉默，我想象不到。</p><p>但我知道，20岁的时光里，我们曾给彼此留下了最灿烂的笑容。</p><p>也许我是时光的孩子，总喜欢把一些东西保存下来，包括我们的故事，就像你们总说我喜欢拍照一样。</p><p>也许真的是因为这一刻，我舍不得了。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-b1a81f26f436b801.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="四年前稚嫩的面孔"></p><h2 id="三儿少妇公主"><a href="#三儿少妇公主" class="headerlink" title="三儿少妇公主"></a>三儿少妇公主</h2><blockquote><p>我的微信还存着这个备注呢，那些开着玩笑胡言乱语的日子。</p></blockquote><p>第一天踏进231的时候，你是睡在床上的，瘦瘦的，眼睛很大，看着很文静，淡淡地打了声招呼，我就开始收拾东西了，对床。</p><p>来到大学，最开始熟悉的女生就是你了。</p><p>那时候，我总喜欢和你呆一起，一起吃饭，一起上自习，一起买衣服，一起出去玩，和你有说不完的话，喜欢拉你自拍，更喜欢偷拍你丑照。</p><p>其实一直没有告诉过你，虽然总喜欢和你斗嘴，但很多时候我在心里是把你当做姐姐的。</p><p>你有一般人没有的稳重，比我成熟许多，懂很多我不知道的东西，你不知道我多羡慕你。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-1378a9315993f993.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="包括你洗衣服的时候"></p><p>还记得那时候你很古董，古董地舍不得换掉你卡到不行了的酷派手机，一直喜欢用QQ，拒绝使用支付宝这个东西，不知道很多新的东西，你把这叫做复古风。</p><p>你偶尔听到我们在说一个新东西的时候，你也会惊讶到诧异，我们总会笑你连这个都不知道，四年了，你换了手机，喜欢上了微信，也有了支付宝，但还是会诧异我们知道的一些你不知道的新的东西。这些，也许你都没有注意到。</p><p>你喜欢安静，我却总是很吵，但总能说到一起，总喜欢逗你笑，然后看你笑的很丑的样子把自己逗笑。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-64b8101a374328d4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="看你笑的"></p><p>开始上课的很长一段时间都是和你坐，每次去晚了还会到第二排去坐，也不知道哪来的勇气。</p><p>每次上课的时候你开始总会听的很认真，然而我听着听着就跑神了，总嫌你不和我说话，无聊的时候就喜欢跟你讲一些搞笑的东西，像什么现代老师又换皮裤啦，英语老师放着听力又睡着了啦，讲课的男老师上课裤子拉链又忘拉啦，你也总会笑的合不拢嘴，那时候，我也就喜欢看你露着牙笑得很丑的样子。</p><p>你帮我擦过苹果，也幼稚地用纸编着戒指傻傻还拉过勾勾。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-74467adc1e43f26a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-69d1513fd5b19eee.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我说你跟我走吧，你说想得美"></p><p>那些日子，你还是乌黑的长发，可是你总说自己不会扎头发，我很喜欢给你编好看的头发，虽然你大多数都是不情愿的。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-b2f44b244a67efa7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我觉得真的好看"></p><p>还记得你和我曾经一起说走就走的旅行吗?一起爬过的山和去过的那些地方…宝鸡的鸡峰山、周至的骊山、蓝田的王顺山 、东郊的未央湖、武功的河滩会、青龙寺的樱花……</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-2ebc4b4a584f9062.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一起登过的船"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-d74fcbbf7b8609e2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一起坐过的海盗船和飞机"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-598427c0a4072fd8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一起许过的愿"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-ddaf0acc15b0c761.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我妹还记得那个晶晶姐姐呢"></p><p>一直想说虽然你很瘦，但是身体还是蛮好的，和这么强壮的我一起翻山越岭，经历风雨的洗礼，一路帮我提着零食，到最后大半都被我吃掉了，你也没嫌弃过我。<br><img src="file:///storage/emulated/0/Download/Pictures/967952FE-04F1-5E52-3209-C0AA13CE5048-download(1" alt="">.jpg)</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-0ba9b755c830a56f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>印象最深的是那晚十点多的宝鸡，我的鼻血止不住地流，你说你害怕看到别人流血的样子，但你也帮我找着纸和厕所，然后一起找着取款机和住的地方，一路互相嫌弃，我骂着你，你骂着我，那狼狈的样子我一辈子都忘不掉。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-5ce86ada82fb0f5f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="风雨后终于是有彩虹的"></p><p>和你一起买衣服，你不是很快就买到合适的了，就是衣服太大撑不起来，不知道我有多羡慕，而我呢，我也很绝望啊，然后你每次都会看着我忧伤的眼神笑我老半天。</p><p>你说你每次和我一块出去都有一件必不可少的事情，那就是要给我找厕所，到后来，你说你都养成习惯了，看到厕所就想到我（冷漠脸）…可是，原谅我真的不是故意的。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-af775c33cbb7ac9d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="还有一模一样的包包"></p><p>要说刻在脑子里最深的事情，那就是感情了，真的想说谢谢你，虽说我也不知道你为什么懂那么多，但那些你安慰和鼓励过我的日子，我永远也忘不了。</p><p>上课的时候你总愿意听我说难过的事，说着说着眼泪就止不住了，你也没嫌弃过，只是笑笑说我好丢人，心情很糟糕的那段时间，总是不想说话，你也总能那么懂我，懂我的不懂事，懂我不想说的话，总会给我递好多纸，然后告诉大家说话小声一点，我睡着了。</p><p>再后来，我换了床，和你对头睡了很久，你嫌弃过我说梦话，我嫌弃过你偶尔的打呼噜，可谁也不愿意再换回去。</p><p>我们一起学软件，我知道你和我一样开始都只是不想让自己看起来那么闲罢了，后来，你说你想考研了，你走了，其实我挺难过的，但到今天挺为你开心的，我知道那段时光是你大学最宝贵的日子，虽然我也曾犹豫过，但终究还是选择继续了，到今天，我是真的喜欢上了。</p><blockquote><p>时间总是阴差阳错，认真地跟我们开着玩笑，调皮地像个孩子。</p></blockquote><p>现在你已经去实习了，是软件，我也实习了半年了，是软件，很幸运，我们的公司离的很近。</p><p>很佩服的事情是，你选择了一个人租房子，还记得我说有空去你家蹭饭蹭床么，等着我呀。</p><p>听说你开始恋爱了，祝福你呀，就知道你说要当尼姑的话就是认真地说说而已，等你的喜糖，也等你穿上婚纱的样子，偷偷还存着你说你喜欢的那个男生呢，哈哈哈。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-4f78e98dfb0a065e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>故事很长，都够讲个三天三夜了，总之，你才21岁，生活还很美好，多出去看看外面的世界，你很勇敢，带着你的自信幼稚一些看看外面，没我的日子，你记得也要笑的很丑很大声。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-03d415467aeffc38.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="拍照那天也是匆匆"></p><h2 id="白萝卜巴巴"><a href="#白萝卜巴巴" class="headerlink" title="白萝卜巴巴"></a>白萝卜巴巴</h2><blockquote><p>我曾说你像白萝卜，也叫过你爸爸，像他们说的那样，我们曾相爱相杀着。</p></blockquote><p>你是我们四个里面让我笑的最开心的那个，也是让我哭的最难过的那个。</p><p>跟你呆一起的时候，像吃着棒棒糖，有草莓味，有咖啡味……我和你的回忆像风，很快，很温暖，很刻骨铭心。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-64f7834f65f5e768.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="你有我喜欢的酒窝"></p><p>故事开始的时候，你比现在胖，我比现在瘦，说要一起减肥，不知道你从哪里看到的偏方，说要一起吃一个星期的苹果，我说好。</p><p>于是我找了个刚认识不久的学长借了辆自行车，带着你就去智慧城了，因为那里的苹果便宜，记得苹果都没够一个礼拜吃，但好像也变轻了。</p><p>大一的时候你和我一起参加舍歌大赛，十佳歌手，虽然我们都知道唱的很一般，但我就是喜欢和你一起站在台上唱歌的感觉。那次舍歌大赛进复赛的时候，你却把短信时间看错了，特别自责，你说你觉得对不起我，我笑笑说没事，机会还很多。</p><p>“各位评委好，我是暴雨，我是小雨。今天我们为大家带来一首曲婉婷的《快活》”</p><p>还记得那年冬天和你买的那条大红围巾，后来你送我了，我每年都会戴，也一直都很喜欢，因为戴着它，总会想起你笑的样子。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-3d00dc70ddc9d04f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="好美啊"></p><p>我说我喜欢你的白球鞋，想和你买一样的，你说好呀，激动地总是一起穿着出去，好般配。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-04083465f14399fc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我还在穿呢"></p><p>和你坐一起的时候很甜蜜，男生们总会嫉妒，你喂我吃樱桃，我喂你吃葡萄，我拉着你的手画着画，你拿着手机拍着说好看，你发朋友圈的时候，你说你妈妈还以为你跟哪个男生拉着手呢。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-52bdab6f8ae194fe.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>我很爱玩，好几次上课把你鞋子都脱掉了，然后就忍不住笑看你尴尬的样子，然后我们就一起笑，老师会朝这里看。叽叽喳喳地像鸟，我也不明白那时候怎么会有那么多话要说。</p><p>后来你去跳舞了，特别喜欢你跳舞前给你编好看的辫子，然后一起买很多很多发卡。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-cbfc5c26f76991e3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="虽然看着是挺杀马特的"></p><p>后来很久，你带我去吃了很多好吃的，我记不住路，总会找不到路乱跑一气，但每次身边有你的时候，就觉得很安心，你说，别怕，西安这点地方不会把你弄丢的，那时候你不知道我心里多温暖。</p><p>那天你带我去你家，我穿着你的睡衣一起睡觉，你妈妈对我很好，很羡慕你们能那么好，你说她也很喜欢我，那时，我开心极了。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-71e28d92ad4ef1ae.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="你看我们那丑样子"></p><p>你曾告诉过你挺胆小，因为小时候的一些事情，不太喜欢跟男生玩，其实后来你应该也发现了，其实我胆也不大，但我还是带你做了许多疯狂的事情，你也愿意陪我一起，不曾说后悔。</p><p>清晰地记得那天，下着小雨，我在长安广场给你打电话说有超级女声海选赛，你快点来，我们一起报名，听到你激动的声音，我都快跳了起来，虽然上台只有短短几分钟，但我们都知道彼此多么幸福，那时候主持人问我们，对方最喜欢做的事情是什么，我们都笑的很开心，因为都说进了对方心里。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-fea6ebc7f00cfb95.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="那一秒真的好激动"></p><p>虽然我有时候大大咧咧的，但偶尔还是喜欢给大家一些小惊喜小意外的，你不知道更让我暖心的是，你总会把那些瞬间拍下来，那时候，我知道你真的都记在心里。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-973b7c2399a41a7f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="真好看"></p><p>最想感谢你的事情就是你教我游泳了，每次在水里的时候，我都不想走，害怕被呛，还是喜欢给你撩水，你总会依着我陪我玩一整个下午。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-788bf80d7bed2dc2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我拉着你的手就那样跳了下去"></p><p>那时候，没有别人，每天从早到晚我们都在聊着天，每次分开一会会儿就觉得好久，你知道吗，有那么些个瞬间， 我真的觉得你喜欢上我了，哈哈，你对我说过的话，我都留着呢。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-04e8b01f1ae7e441.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="忍没忍住 好像没有"></p><p><img src="file:///storage/emulated/0/Download/Pictures/9AB1C5B8-02AB-EE9F-367D-C2FFA0AE7225-download(1" alt="">.jpeg)</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-37ee1a020257b2e6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="吵过也闹过"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-f98dbc7d7682fc79.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="说一些杀马特的话"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-4d5bff760ae96624.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我那天问你你是不是从这时候喜欢上贾晨欢的"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-78e68abd3995ab1f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/2190281-df32c9f098b1fb15.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>那次和你一起去剪头发，一起做指甲，一路打打闹闹，记得那次不知道怎么的就丢了钱包，你知道吗，从那以后我出门总会忘记带身份证，我也不知道怎么才能改掉。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-acf1ea230c88d055.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="好喜欢"></p><p>很好玩的事情是我们都特别喜欢拍照，那天，阳光很好，我说我们去拍照吧，你说好啊，我们就去了，那次，花开的正好，阳光很也刺眼。</p><p>再后来，我带你和他们一起玩，我说男生其实很好的，有时候比女生要好很多，我们一起去滑雪，一起去爬山，你笑的很甜，笑起来的酒窝更好看。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-2a183cb4f54cfe6b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="雨中的太白山"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-a67d01fb1823f5a1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="扑通扑通"></p><p>后来的一段时间，我忙着学习准备找工作了，基本每天都要去实验室，你说你纠结着要不要考研，同时也学着你一直喜欢的硬件。关于工作，我们曾聊过很多，因为志趣总那么相投，还记得我们说大四还要一起参加舍歌大赛，要一起做好多事情，毕业要一起租房子，一起生喜欢的女孩，然后认彼此做干妈…</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-6a19bc7b8ea2a879.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="你说你也喜欢女孩"></p><p>原来真正到最后的时候，才发现，有些诺言真的是用尽全力也无法兑现的。</p><p>你告诉过我你挺喜欢一个男生，但是人家有女朋友了，打工的一个男生老是缠着你，你也很烦恼，你说你突然特别想谈恋爱了，我说别急，你总会等到那个人的。</p><p>那时候我们都不能理解大学里很多不知道因为什么在一起的情侣们，后来也还是散了，我们互相看看总是笑笑。</p><p>最后呢，你真的恋爱了，是和我大学关系开始最好的男孩，知道你两在一起，是别人告诉我的，你知道吗，那时候，我在意了，伤心了好久，伤心到你都没曾给过我机会给你们送上一句祝福，我总是安慰自己，你应该是不想让我难过吧。</p><p>后来，一切都淡淡的，日子过的很快，你看起来很快乐，我也是，只是我们再也不像以前那样亲密了。</p><p>前几天聚会的时候，你说很多东西都变了，很多事情也不是想象中的样子，我说，是啊，谁又能想的到每件事呢，你不愿意告诉我们你发生了什么，我们也没有细问，只是看到你哭的时候，仿佛看到了以前的我自己，我知道，是因为感情，有些东西，总要经历的。</p><p>你曾经对我说你高中的闺蜜就那样离开你了，你对我说很怕我有一天会不在了，我抓着你的手说，傻瓜，放心吧，我答应你，不会的。我怎么会舍得离开你呢。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-eb3f74f0efb2b546.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>现在我还是一样的答案，你哪天累了的时候随时来找我，我都在。</p><p>也许我们还是会打架，还是会斗嘴，但这些比起我们的回忆又算些什么呢。总之，不管你作出怎样的决定，我都会支持你。</p><p>你说过你以后想回你们的小镇开一个跳舞班，教孩子们跳舞，我说你以后一定会很幸福，我知道我们的梦都还在。你也会幸福。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-d823f56338514219.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt="怎样都要幸福"></p><h2 id="小婊砸公主"><a href="#小婊砸公主" class="headerlink" title="小婊砸公主"></a>小婊砸公主</h2><blockquote><p>你这个小婊砸，好像好久没有一起吃辣条了吧，你说你是个男的就会喜欢我的，我信了。</p></blockquote><p><img src="http://upload-images.jianshu.io/upload_images/2190281-b227bcbef393cf50.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>你总是气的我想打你，又觉得你傻的可以，你知道吗？你哭的样子总会让人心疼，但我知道说什么话，你都听不去进去，你放心，我还是会像以前一样骂你，太多安慰的话对你来说没用，讲真，你就适合人骂你两句打你两下，你才会清醒。</p><p>你说你和熟悉的人玩的会很疯，不熟悉的人会觉得你很腼腆。好像是这样。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-d3e7ff21bb5cd95b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="还记得那场大战吗"></p><p>在经历了你所谓的慢热期后，我们由熟悉到疯狂，由疯狂到见了就喜欢互掐。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-277c94a9a7a1522d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="床上吃东西的日子"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-1e6ce038a6a6c67c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="你说你喜欢男孩，想让他娶我女儿"></p><p>她们三都是狮子子座，所以很多东西只有射手座的我和魔羯座的你才会懂，也会有一样的感触，所以很多话我都喜欢跟你讲，你也总会很认真地听，跟我讲你的想法，这大概就是我们最安静的时候了。</p><p><img src="file:///storage/emulated/0/BaiduNetdisk/HONOR H30-L01照片备份/DCIM/照片/2014-06-06 22.33.00(1" alt="">.jpg)</p><p>那时候，你还没有瘦，总笑你脸大，你总会气的骂我，更搞笑的是我还总喜欢拉着你拍照，每次都骗你说会把你脸照小的，你也就乖乖地跟我去了，然而结果总是很因戳死听～</p><p>看到很多说的心里的话总喜欢分享给你，我知道你会懂，你也一样。</p><p>上课的时候，你总开始总会表现地很认真，然后就没有然后了，我穿着你的裤子，变着各种花样玩着，让自己不无聊。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-82e72b4b26f0ec7e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-32bb9499c97bf868.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="画的可以"></p><p>隔段时间你就会告诉我，你又掉头发了，开始我觉得挺搞笑的，开着玩笑说你快秃顶了，其实我知道你心里真的挺害怕的，你说这是遗传，但是真对不起，我每次都会忍住不笑，但总会笑出声，但是一句话是真的，洗的不要那么勤，有时候你一天两次的频率简直可怕。</p><p>每次快考试的时候你总会黏上我，和我一起自习或者去207，其实我一直的都没想通为什么，其实大部分我也是考试前突击的，之前也是一片白，很佩服的是，每次考试的时候你胆子总会很大，我就不行，还是会怂。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-8b0eabac69901bf8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="总有很多复习不完的东西"></p><p>喜欢和你一起去逛，去吃，去买衣服，虽然彼此都知道各自的审美很不一样，但是你总能尊重我的选择，我虽不能理解，但有时候还是会安慰下你，那些一起买过的发卡，虽然后来也没怎么带过，但看到那一刻就是特别想买。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-874c76d5ec0d2f3e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="那个大红的"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-2ed809c249622371.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="还有那个花的"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-a380b722882e4b7c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="总会试好久的东西然后不买"></p><p>一起胖的时候总有那么多次肆无忌惮，还记得一起吃着辣条和薯片躺在床上一起看电影的日子，雷雨田总会被咱们气的半死，可是还是想说，真特么舒服啊。</p><p>不知道多少次是晚上看的电影了，看完我两就都不想动了，就那样挤在一张床上，互相嫌弃，但就是没人想动。</p><p>你虽然比我高些，但我总喜欢欺负你，喜欢看着你喊着的样子，好搞笑，还记得那次在你床上，我蒙着面和你打的累的都动不了了么，还被车晶拍了下来，起因居然是因为你想亲我，想想都好笑。</p><p>那时你还没有谈恋爱，我们都有很多时间，我总拉着你陪我去打球，羽毛球，篮球，去东西超市买吃的，吃政法买吃的，陪我在实验室熬通宵，你从来没有抱怨，我想那些一起疯，一起闹的日子，你应该也很怀念吧。现在你瘦了好多，我问你为什么，你说是恋爱谈的，我笑笑，羡慕极了。</p><p>有次你说你也想和我一起去爬山，我说好呀，说走就走，清楚的记得那天是周四，翘了两节课，去的翠华山，玩的很嗨，还吃了好久没次的馍夹辣条，幸福的要死掉。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-5920188483d4f91b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-67ef9d579197d411.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="就我们两个人"></p><p>我们一起踏过天桥，出去骑过车，摘过路上的野花，看过路上的美女，那些都是回不去的曾经。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-48163921b8f931a1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>还记得那学期末和楼管阿姨那场大战么，简直惊心动魄，我们三在我的叟主意下成功地把阿姨气的穿着台阶跳下来疯狂地追着我们跑，写了检讨回去坐在楼道谝到半夜。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-0739759d0c9f57ed.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="激动啊"></p><p>记得一次你跟同学去成都玩，我打了很多电话发了很多消息，你都没有回复，我在家里胡思乱想，以为你丢了，以为你回不来了，在贴吧里找的传话的人给你留言，给你发了好多视频，我急坏了。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-2db41e7f1bfe2ba7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="那时还以为见不到你了"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-73c189533c79e68b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="千算万算都 没算到你手机丢了"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-d5fb2558a28f0fa6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="虽然回来的特产是一包薯片"></p><p>还有那年暑假和你一起去打工，抓着别人剩下的鸡翅你就那样吃了，当时我就惊呆了，后来，我也变得和你一样了，半夜路上吃着自己偷偷藏着的蛋糕，路边买的烤肠，吃的不亦乐乎。</p><p>一起买过的丑衣服，一起减肥的日子，一起吃辣条的日子，一起撕比的日子，我知道都在我们心里，愿你总能保持那颗最小的童心，以后遇到像我一样的人时还会疯会笑会闹。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-dea3adb378166d9e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""><br><img src="file:///storage/emulated/0/Pictures/爱相机最近拍摄/920DCCD6-97FA-484C-6B62-CC169F898A92-airtake-original(1" alt="">.jpg)</p><h2 id="雷雷"><a href="#雷雷" class="headerlink" title="雷雷"></a>雷雷</h2><blockquote><p>我们的故事没有那么多刻骨铭心，但它淡淡的，缓缓的，静静的，在我心里…</p></blockquote><p><img src="file:///storage/emulated/0/Pictures/爱相机最近拍摄/B9E349D3-FEB4-D7D9-5E8C-149B77C80C82-airtake-original(1" alt="">.jpg)</p><p>第一天来的时候我居然把你妹妹当成了你，后来见了你，觉得你好瘦小，应该是个很安静的女生吧。</p><p>班里很多人喜欢叫你雷雷，感觉挺好听的，但不知道为什么，宿舍里的人还是喜欢叫你雷雨田。</p><p>好玩的是，我们都是小眼睛的姑娘，你的眼睛比我大那么一点点，总被她们嘲笑。</p><p>你喜欢看小说，喜欢睡觉，喜欢打游戏，总之，是个不一样的女生，你很大方，总能让我刮目相看。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-21fee0250366e639.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="酷酷哒"></p><p>印象中，你没有哭过几次，但是那次我们都知道你很伤心，不知道你是不是还记得，我那晚听到后生气极了，要了他的QQ号，就开始骂他，我想让他跟你道歉，跟你说清楚原因，但其实不知道，你难过的时候喜欢静静地呆着，那是我们宿舍第一次因为感情到半夜才睡觉，我当时就想说，你那么漂亮，他配不上你。</p><p>你开始是宿舍翘课最多的人，慢慢地，我也开始了，不知道多少次，十点多的早晨，我们起来总会互相看看对方在不在，看看群里有没有什么消息。</p><p>因为你不喜欢逛街，而我每次拉着她们出去一玩就是很久，所以我们一起出去的次数应该可以数的清，基本都是吃饭了。</p><p>你跑的很快，跳的很高，也很聪明，最让我佩服的是，考试的前夜你也会着急，总会临阵磨刀做些题，很多课也就过了。</p><p>你说你不太喜欢拍照，但我那次还是架着自拍杆拉着你拍了，其实你笑起来很好看，鼻子红红的。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-c623a1fc20793c83.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>很羡慕你每天晚上都吃饭，而且不怎么运动，也不会胖的体质，你开玩笑说你睡的越多越瘦。</p><p>和你一起看电影的时候，你很胆大，恐怖的镜头我和陈雪总会吓的叫出声，然后抓着你的胳膊。你总是很淡定地安慰着我们。</p><p>我们两在宿舍的时候，你不想下去买饭，我也不想，还记得我曾经要把你烦死的时候么，拉着你要你跟我去超市，死活不走，当然，你总会被我叫去，买一大堆零食还有辣条，总是那么爽。</p><p>有时候会学你说你们延安话，也会笑你发音不对，但只是觉得很好玩，你总说我老说一些杀马特的话，但你还是会笑着学好久。</p><p>记得好几次我和陈雪在宿舍吵的都快把你烦死了，虽然我两也不是故意，但真的有时候就是想打一架而已，以后你就安静了，哈哈。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-6ca74e2b0f3d15b9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt="全对 哈"></p><p>好几次你找我修电脑的时候，说宿舍漏水了的时候，你都好乖，轻轻地叫我舍长，虽然我知道没什么好事，但还是觉得挺暖心的。还记得我说最喜欢听你叫我名字了吗，不知道为什么，就是很好听。</p><p>就这样，淡淡的，日子一天天过着，转眼，就要离开了，很庆幸，彼此都给了对方很舒服的方式，虽然你总喊着说要删掉微信，删掉电话，但我们都知道，你只是说说而已。</p><p><img src="file:///storage/emulated/0/BaiduNetdisk/HONOR H30-L01照片备份/DCIM/照片/IMG_20140914_223007(1" alt="">.jpg)</p><p>你说都四年了，你还没跟我洗过单间，我偷笑，哈哈，不提前预约，你没有机会啦。</p><p>我想，下次再见，我应该还是会很吵，你或许还是会嫌弃我，但我知道你也只是说说而已。</p><p>最后呢，还是那句话，幸福来了的时候千万别拒绝，要抓住了，因为你值得。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-a4b1223030babc5b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="奔向最遥远地方，去做最幸福的人"><a href="#奔向最遥远地方，去做最幸福的人" class="headerlink" title="奔向最遥远地方，去做最幸福的人"></a>奔向最遥远地方，去做最幸福的人</h2><p>从不觉得我们的故事会结束，我想我会一直更新这篇故事，或许五年后，或许十年后，等到我老了，写不动了。等我们有了孩子的时候，我要告诉她们，自己的妈妈年轻的时候曾有这么几个可爱的人儿陪着，然后笑着给她们讲我们剩下的故事。</p><p>别忘了啊，我以后是一定要有个女孩的，要是你们先生了女孩，一定要让我看看有没有我漂亮。</p><p>想说的话还有很多，千言万语，总之，愿你们以后都幸福。</p><p>如果哪天遇到了像我一样的人，一定要想起来曾经的宿舍有一个喜欢说着表情包里的话的女生，她有时很吵，有时很安静，她眼睛小小的，怪念头很多，也特别喜欢小女孩，曾陪你们走过了20岁最美好的时光。</p><p>2017年6月13日的时候，她找到了几年前的照片，虽然有的很丑，但在她心里却是你们最美的模样，或许她写下这些故事的时候，眼里闪着光，像星星。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-8be11755ded11845.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt="还有，她曾很喜欢吃辣条"></p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;毕业照只用了四秒 却定格了四年的青春&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2013年9月15日，我们相见，到今天2017年6月13日，整整1367天的日子，慢慢地，我们要开始离开，四年，像一场电影，说长也长，
      
    
    </summary>
    
      <category term="大学" scheme="https://www.wdanna.com/%E5%A4%A7%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>Flex布局也就这么多</title>
    <link href="https://www.wdanna.com/Flex%E5%B8%83%E5%B1%80%E4%B9%9F%E5%B0%B1%E8%BF%99%E4%B9%88%E5%A4%9A/"/>
    <id>https://www.wdanna.com/Flex布局也就这么多/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>还清楚记得第一次用Flex实现了垂直居中的时候，我那各种unbelievable的心情，然后就深深喜欢上了这个好玩的东西</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-c77651f6b6f323c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="flex layout"></p><h2 id="为什么出现"><a href="#为什么出现" class="headerlink" title="为什么出现"></a>为什么出现</h2><p>关于Flex布局的出现解决了的问题，个人总结了以下几点原因。</p><p>先看看到现在WEB布局的一个发展吧<br><img src="http://upload-images.jianshu.io/upload_images/2190281-04d2aa9e82e4d45f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="布局"></p><ul><li>传统的布局都是基于盒模型，然后设置各种display和position，必要时再加上相应地float，想必写过CSS的同学都感受到过，实现一些复杂的布局会非常不方便，有时候自己写的样式，过段时间看都不敢相信。</li><li>对于一些常用的居中问题，比如垂直居中的实现，使用flex会非常简单</li><li>还有一些内容的伸缩，等分等问题</li></ul><p><strong>我觉得最主要的一点就是简化了样式的编写，同样实现一个复杂的需求，之前用CSS可能得编写一大堆代码，但是用flex可能几行就实现了</strong></p><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>flex的全称是<code>Flexible Box</code>，是2009年<code>W3C</code>提出的一个布局概念，目的是简便、完整、响应式地实现各种页面的布局。</p><p>画了张flex从工作草案到候选的的大事年表<br><img src="http://upload-images.jianshu.io/upload_images/2190281-78be66b0a95bf60c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>要注意的一点：</p><ul><li>设为 flex 布局以后，子元素的<code>floa</code>t、<code>clear</code>和<code>vertical-align</code>属性将失效</li><li>flex布局默认是首行左对齐<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2>理解flex中有几个概念很重要，像下图，如果是用翻译，注意是侧轴，不要老说纵轴，是主轴，不要老说横轴，因为代表的意义不一样。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-ee0593505e66fbd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li></ul><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>使用flex很简单，只用设置display属性为flex就可以，像下面这样：<br><img src="http://upload-images.jianshu.io/upload_images/2190281-a1fc0af170342e3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>自己写了一个Demo，建议，打开demo，可边看边试，会理解的特别快，点击<a href="https://banshengbushu.github.io/flex-demo/" target="_blank" rel="noopener">在线演示</a>可修改样式</strong></p><h2 id="Container的属性（6个）"><a href="#Container的属性（6个）" class="headerlink" title="Container的属性（6个）"></a>Container的属性（6个）</h2><p>从概念图可以看出，flex布局有两个最大的概念也就是container和item，所以相应地所有属性也只对这两个元素起作用的，下来介绍container的属性，当然前提是container设置了<code>display: flex</code></p><ul><li><strong>1. flex-direction</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">  flex-direction: row | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>设置item排列的方向<br>默认是row，从主轴的起点向终点依次排列。<br>row-reverse: 从主轴的终点位置开始向起点依次排列。<br>column: 从侧轴的起点向终点依次排列。<br>column-reverse: 从侧轴的起点位置开始向终点依次排列。<br><strong>注意设置了这个属性的item会影响tab键的顺序哦。</strong></p></blockquote><ul><li><strong>2. flex-wrap</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.container&#123;</span><br><span class="line">  flex-wrap: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>设置item是否换行<br>默认是nowrap，不换行显示。<br>wrap:   一行排列显示不下的时候会自动换行显示，默认主轴从起点到终点。<br>wrap-reverse：一行排列显示不下的时候会自动换行显示，默认主轴从终点到起点。</p></blockquote><ul><li><p><strong>3.  flex-flow（，row nowrap）</strong></p><blockquote><p>这个是flex-direction 和 flex-wrap 属性的缩写，默认是row nowrap<br>就像margin和margin-left、margin-right、margin-top、margin-buttom的关系一样</p></blockquote></li><li><p><strong>4.  justify-content</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">  justify-content: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>主轴上的所有子元素都不能伸缩或已经达到其最大值时，这一属性可对多余的空间进行分配</p><ul><li>flex-start: 默认值，子元素从主轴的起点开始排列</li><li>flex-end: 子元素从主轴的终点开始排列</li><li>center: 子元素关于主轴的中点对齐排列</li><li>space-between 弹性盒子元素两端对齐，其余平均地分布在行里</li><li>space-around 弹性盒子元素会平均地分布在行里，两端保留子元素与子元素之间间距大小的一半</li></ul></blockquote><ul><li><strong>5. align-items</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">  align-items: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>设置元素在侧轴上的对齐方式，对单行起作用</p><ul><li>flex-start: 默认值，子元素从侧轴的起点开始排列</li><li>flex-end: 子元素从侧轴的终点开始排列</li><li>center: 子元素关于侧轴居中排列</li><li>baseline:  子元素关于侧轴的基线对齐</li><li>stretch: 如果不设置width和height，元素高度默认撑满父容器</li></ul></blockquote><ul><li><strong>6. align-content</strong><blockquote><p>堆叠伸缩行的对齐方式， 定义了多根轴线的对齐方式，项目只有一根轴线，该属性不起作用</p></blockquote></li></ul><p>#item的属性</p><ul><li><strong>1. order</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  order: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>按照order的属性排列元素, 数值小的在前面，还可以是负数，默认是0</p></blockquote><ul><li><strong>2. flex-grow</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  flex-grow: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>定义项目的放大比例, 默认是0，即父容器如果存在剩余空间，也不放大</p><ul><li>所有项目的flex-grow属性都为1，则它们将等分剩余空间</li></ul></blockquote><ul><li><strong>3.  flex-shrink</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  flex-shrink: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><ul><li>设置弹性盒的缩小比例，默认是1</li><li>父容器如果空间不足以分配子元素，元素会默认缩小等分不足空间</li><li>可以设置item的flex-shrink的属性为0来保证该元素不会被缩小</li></ul></blockquote><ul><li><p><strong>4.  flex-basis</strong></p><blockquote><p>定义了在分配多余空间之前，项目占据的主轴空间<br>如果不设置改属性，默认的main-size就是item的width或height，取决于主轴是什么</p></blockquote></li><li><p><strong>5. flex</strong></p></li></ul><blockquote><ul><li>flex是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto，后两个系数可选</li><li>两个快捷值：auto (1 1 auto) 和 none (0 0 auto)</li></ul></blockquote><ul><li><strong>6. align-self</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  align-self: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>align-self 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性, 默认值为auto, 取值和container的align-items属性一致</p></blockquote><h2 id="浏览器的兼容性"><a href="#浏览器的兼容性" class="headerlink" title="浏览器的兼容性"></a>浏览器的兼容性</h2><p>在<a href="https://caniuse.com/" target="_blank" rel="noopener">这里</a>查询，可以看到已被大多数浏览器支持</p><p>参考：<br><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="noopener">Flex 布局教程—实例篇</a><br><a href="https://www.w3cplus.com/css3/a-guide-to-flexbox-new.html" target="_blank" rel="noopener">一个完成的flexbox指南</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;还清楚记得第一次用Flex实现了垂直居中的时候，我那各种unbelievable的心情，然后就深深喜欢上了这个好玩的东西&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2190281-c7765
      
    
    </summary>
    
      <category term="Web 前端" scheme="https://www.wdanna.com/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Git 入门篇</title>
    <link href="https://www.wdanna.com/Git%20%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>https://www.wdanna.com/Git 入门篇/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、读音"><a href="#1、读音" class="headerlink" title="1、读音"></a>1、读音</h3><p>本人一直对技术词汇的发音有不可描述的强迫症现象，所以还是先来聊一聊它的发音。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-ca50fe1d44eb78e4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="先记住Git标志"></p><p>曾经偶尔不止一次地听到身边有人看着Git叫“鸡特”（谐音），从一开始的满脸懵逼到最后竟笑出了声…<br><img src="http://upload-images.jianshu.io/upload_images/2190281-92a7c0df8094b53b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="正确发音是酱紫的"><br>我觉得作为一个程序不管是猿还是媛，为了避免引起其他猿或者是媛莫名发笑，为了避=避免被一群诧异的眼光注视，为了避免在跟别人讨论技术问题的时候被人揪着发音不放，还是确保你的发音准确吧。</p><p> <strong>忘掉“鸡特”，记住“给特”！</strong></p><h3 id="2、起源"><a href="#2、起源" class="headerlink" title="2、起源"></a>2、起源</h3><blockquote><p>同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代</p></blockquote><p>Git的作者是大名鼎鼎的Linus Torvalds，没错，就是Linux之父，Linus花了两周时间自己用C写了一个分布式版本控制系统，于2005发布第一个Git版本。</p><p>Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-0923196f9000bee3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="对，就是他"></p><h3 id="3、是什么"><a href="#3、是什么" class="headerlink" title="3、是什么"></a>3、是什么</h3><blockquote><p>Git是目前世界上最先进的分布式版本控制系统（没有之一）</p></blockquote><p>Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><h3 id="4、解决了什么问题"><a href="#4、解决了什么问题" class="headerlink" title="4、解决了什么问题"></a>4、解决了什么问题</h3><ul><li><p>假如你想修改一个文件，但又担心修改的不对，改的乱七八糟找不回以前的代码，这是你会怎么办呢…<br>你可能会说把这个文件或者文件夹copy一份在U盘或者电脑上（以前我就是酱紫干的），然后就放心的去修改了，这样当然可以解决很多问题，但有没有想过若是有天你需要修改的文件并不是一个文件，而是很多不同的文件，大小可能达到几个G，你还要用U盘拷来拷去吗，人生苦短，不如节省下来这些时间去吃个饭，跑会儿步，多看看这个大千世界呢…</p></li><li><p>如果有天你找到一个很久前写的代码（并不是你一个人做的修改），你很着急想知道是哪个人什么时候修改了哪一块的代码，你会怎么办？<br>打电话联系队友吗？确定还存着她的电话吗？她换号了怎么办？手机静音怎么办？她也不记得怎么办…</p></li><li><p>如果有天你被困在一个不能连接网络的地方时就像在飞机上，地下室，电梯等等，这时候你是不是也想记录自己的代码版本呢<br><strong>还有诸如此类等等很多问题，这时Git就像一个小精灵一样帮你解决这些问题</strong></p></li></ul><p>###5、分布式控制系统<br>与它对应的叫集中式控制系统，两者的区别是什么呢（详情请看<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374027586935cf69c53637d8458c9aec27dd546a6cd6000" target="_blank" rel="noopener">廖雪峰的官方网站</a><br>）</p><blockquote><p>一句话，就是：“分头做事”与“一堆人”的区别</p></blockquote><p><strong>个人理解（这里感谢<a href="http://www.jianshu.com/users/ecbf49bf207b/latest_articles" target="_blank" rel="noopener"> <a href="http://www.jianshu.com/users/ecbf49bf207b" target="_blank" rel="noopener">icorvoh</a> 给我的指导意见</a>）</strong>—假如现在需要五个人一起修改一份文档，然后发布到网上，这时…</p><ul><li><strong>分布式</strong>—这五个人手里分别有这份文档的拷贝版（每份文档含有所有修改记录），然后协商后各自修改文档的不同部分，任何一个人修改完成后都可以自行发布到网上，然后本地存着最新版本，这时要合并文档的话，选择一个人作为原版解决大家的冲突，其他人当然也可以看到别人修改的部分，这时一个人的电脑出问题了没关系，别人电脑上也有拷贝版（包含最早的原版和修改后的新版本）。但由于每两个电脑很可能不在同一个局域网内，无法互相直接访问，通常引入一台充当“中央服务器”的电脑（如Github服务器），但这个服务器的作用仅仅是用来方便“交换”大家的修改而已。</li><li><strong>集中式</strong>—这五个人中需要一个领导者，他手里有这份文档的最终保存版（所有修改记录），他负责分配任务，安排谁修改哪一部分，然后其他四个人从他那里领取任务（拷贝文档的副本，不含修改记录），修改完成后各自的部分后交给这个领导者，由他发布到网上，也就是说即使大家都修改的准确无误，一旦这个领导者这里出了问题，那将功亏一篑。</li></ul><p>###6、安装</p><ul><li><p>Linux安装Git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure></li><li><p>Windows安装Git<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000" target="_blank" rel="noopener">请看这里</a></p></li><li><p>成功后查看版本号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">git version 2.7.4</span><br></pre></td></tr></table></figure></li></ul><p>###7、基本配置</p><ul><li>在<a href="https://github.com/" target="_blank" rel="noopener">Github官网</a>注册并登录自己的账号</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/2190281-fdd2266ed0173ac4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="点击Sign in输入账号即可"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-2392ba00a94057b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="这是我的主页"></p><ul><li>为了其他人方便的查看与联系提交人，所以我们第一步就是要设置自己的用户名与邮箱。执行以下代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;your name&quot;</span><br><span class="line">$ git config --global user.email &quot;your email&quot;</span><br></pre></td></tr></table></figure></li></ul><p><strong>git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址</strong></p><ul><li><p><strong>生成SSH</strong>（默认的https 方式在push的时候是需要验证用户名和密码的；而 SSH 在push的时候，是不需要输入用户名的，这时你的效率很提高很多），首先打开终端执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh</span><br><span class="line">$ ls</span><br><span class="line">#检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过下一步，直接进入下下一步</span><br><span class="line">$  ssh-keygen -t rsa -C &quot;youremail&quot;</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/home/xx/.ssh/id_rsa): </span><br><span class="line">#一直输入回车即可（不设置密码）</span><br><span class="line">SHA256:83MxSnlgDza94rXX9hUJhBGnXRje+q0ABAyIl9OqHcU wangdanna1995@outlook.com</span><br><span class="line">The key&apos;s randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|   . =.o.  o++o. |</span><br><span class="line">|  . = E .. o*.o  |</span><br><span class="line">|   . +    B..+ . |</span><br><span class="line">|    o    + * .o .|</span><br><span class="line">|   o .  S = B. o |</span><br><span class="line">|  . .    = * +..o|</span><br><span class="line">|          = + ..=|</span><br><span class="line">|           o o oo|</span><br><span class="line">|              . .|</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure></li><li><p><strong>添加你的 SSH key 到 github</strong><br>首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制，然后进入Github首页</p></li></ul><p><img src="http://upload-images.jianshu.io/upload_images/2190281-7fcc42fc3783ce48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="进入主页后，点击settings"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-d4199c4953079c2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="点击左侧的SSH and GPG keys，然后点击右上角的New SSH key"></p><p>把你复制的 SSH key 代码粘贴到 key 所对应的输入框中，记得 SSH key 代码的前后不要留有空格或者回车。当然，上面的 Title 所对应的输入框你也可以输入一个该 SSH key 显示在 github 上的一个别名。默认的会使用你的邮件名称。</p><ul><li><strong>测试该SSH key</strong><br>继续在终端执行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li></ul><p>中间看到提示就输入回车，看到一下提示即成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You&apos;ve successfully authenticated, but GitHub does not</span><br><span class="line"># provide shell access.</span><br></pre></td></tr></table></figure></p><p>###8、将你的代码提交到Github</p><ul><li>远程创建一个仓库<br>进入主页点击右上角的小加号</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/2190281-486b58f592c1e131.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择第一个New repository"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-631e54867b9b8ac0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Repository name那里输入你的仓库名字，选中Public和Initinlize那个选项"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-ef64ae25e9a61dcd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="点击clone那个绿色按钮然后复制那个地址"></p><ul><li><p>打开终端，在本地选择一个要放这个仓库的目录，输入这条命令，即可将远程仓库克隆到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@github.com:banshengbushu/test.git</span><br><span class="line">Cloning into &apos;test&apos;...</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line">$ cd test</span><br><span class="line">$ ls</span><br><span class="line">README.md</span><br></pre></td></tr></table></figure></li><li><p>这时你可以通过这条命令查看仓库文件的状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is up-to-date with &apos;origin/master&apos;.</span><br><span class="line">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure></li></ul><p>这说明现在的工作目录相当干净。换句话说，所有已跟踪文件在上次提交后都未被更改过，当前目录下没有出现任何处于未跟踪的新文件</p><ul><li>修改README.md文件内容并保存</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/2190281-dc677cda68bc7a67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li>这时使用<code>git status</code>查看哪些文件当前处于什么状态（列出已缓存、未缓存、未追踪的文件），这时这个文件变成了红色，也就是<strong>未跟踪</strong>的文件，意味着Git在之前的快照（提交）中没有这些文件；Git 不会自动将之纳入跟踪范围。现在，我们确实想要跟踪管理 README 这个文件</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/2190281-03c6091bd0e8bdaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="未跟踪状态"></p><ul><li>跟踪新文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add README.md</span><br></pre></td></tr></table></figure></li></ul><p>此时再运行 <code>git status</code> 命令，会看到 README 文件已被跟踪，变成绿色了，并处于暂存状态</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-66a529fdf9e1dc8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="暂存状态"><br>只要在 “Changes to be committed” 这行下面的，就说明是已暂存状态。如果此时提交，那么该文件此时此刻的版本将被留存在历史记录中</p><ul><li>提交更新<br>现在的暂存区域已经准备妥当可以提交了。在此之前，请一定要确认还有什么修改过的或新建的文件还没有<code>git add</code><br>过，否则提交的时候不会记录这些还没暂存起来的变化。所以，每次准备提交前，先用<code>git status</code><br>看下，是不是都已暂存起来了，然后再运行提交命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;备注信息&quot;</span><br><span class="line">[master 279ce27] modify content</span><br><span class="line"> 1 file changed, 2 insertions(+), 1 deletion(-)</span><br></pre></td></tr></table></figure></li></ul><p>再次查看状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is ahead of &apos;origin/master&apos; by 1 commit.</span><br><span class="line">  (use &quot;git push&quot; to publish your local commits)</span><br><span class="line">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure></p><ul><li>推送数据到远程仓库<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br><span class="line">Counting objects: 3, done.</span><br><span class="line">Writing objects: 100% (3/3), 289 bytes | 0 bytes/s, done.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To https://github.com/banshengbushu/test.git</span><br><span class="line">   8e0624f..279ce27  master -&gt; master</span><br></pre></td></tr></table></figure></li></ul><p>只有在所克隆的服务器上有写权限，或者同一时刻没有其他人在推数据，这条命令才会如期完成任务，这样就成功push了，再看看你的状态</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-99ec6c4bc74a9f3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="就跟开始一样干净啦"><br>快去刷新下你远程仓库的代码吧，是不是也一起跟新了呢<br><img src="http://upload-images.jianshu.io/upload_images/2190281-8acd0c4d0a068cd1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="那是必须更新的呦"></p><p>###9、学习资料整理</p><ul><li>韩亦乐同学写的git入门文档：<a href="http://www.jianshu.com/p/b238de250c06" target="_blank" rel="noopener">http://www.jianshu.com/p/b238de250c06</a>， 有问题可以与 <a href="https://bbs.excellence-girls.org/uid/58" target="_blank" rel="noopener">@icorvoh</a> 交流</li><li>视频教程《版本控制入门 – 搬进 Github》：<a href="http://www.imooc.com/learn/390" target="_blank" rel="noopener">http://www.imooc.com/learn/390</a></li><li>胡皓提供的Git学习资源指南: <a href="https://github.com/iamcoach/git" target="_blank" rel="noopener">https://github.com/iamcoach/git</a></li><li>Git简明指南：<a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">http://rogerdudler.github.io/git-guide/index.zh.html</a></li><li>免费的git书箱 progit2: <a href="https://www.gitbook.com/book/bingohuang/progit2/details" target="_blank" rel="noopener">https://www.gitbook.com/book/bingohuang/progit2/details</a>，点击 Download PDF按钮下载</li><li>git常用命令手册：<a href="https://bbs.excellence-girls.org/topic/166" target="_blank" rel="noopener">https://bbs.excellence-girls.org/topic/166</a></li><li>廖雪峰的git在线教程：<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></li><li>在线尝试git: <a href="https://try.github.io/" target="_blank" rel="noopener">https://try.github.io/</a>， 中文翻译在这里：<a href="http://blog.csdn.net/u011109881/article/details/51447500" target="_blank" rel="noopener">http://blog.csdn.net/u011109881/article/details/51447500</a></li><li>Git学习资源汇总：<a href="http://www.jianshu.com/p/55496ff224e9" target="_blank" rel="noopener">http://www.jianshu.com/p/55496ff224e9</a></li></ul><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、读音&quot;&gt;&lt;a href=&quot;#1、读音&quot; class=&quot;headerlink&quot; title=&quot;1、读音&quot;&gt;&lt;/a&gt;1、读音&lt;/h3&gt;&lt;p&gt;本人一直对技术词汇的发音有不可描述的强迫症现象，所以还是先来聊一聊它的发音。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http:/
      
    
    </summary>
    
      <category term="Git" scheme="https://www.wdanna.com/Git/"/>
    
    
  </entry>
  
  <entry>
    <title>CSS 实现动态百分比圆环</title>
    <link href="https://www.wdanna.com/CSS%20%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E7%99%BE%E5%88%86%E6%AF%94%E5%9C%86%E7%8E%AF/"/>
    <id>https://www.wdanna.com/CSS 实现动态百分比圆环/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>#效果展示<br>没掌握上传动图的操作，这里就先截静态图吧</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-be2ac373c69142a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="25%"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-471f4406c7898dad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="50%"></p><p>#实现思路</p><blockquote><p>自己的思路</p></blockquote><p>一开始看到这个图的时候，想着应该不难</p><ul><li>外面一个<code>div</code>，里面一个<code>div</code>，一个背景深蓝色，一个背景白色</li><li>蓝色的<code>div</code>加一个伪元素，背景浅蓝色，再裁剪一半</li></ul><p>还是先试试，写着写着发现中间各种设置四周边距，才让中间<code>div</code>居中，我都看不下去了</p><blockquote><p>参考了别人的思路</p></blockquote><p>看了有很多例子，一开始没看懂的时候，觉得都写的什么呀，有这么复杂吗，但不知道怎么就突然开了窍，哇，这么简单，原来都是套路呀。</p><p>#CSS属性</p><ul><li><code>clip</code> 设置裁剪，<a href="https://www.w3schools.com/cssref/pr_pos_clip.asp" target="_blank" rel="noopener">详细介绍看这里</a></li><li><code>transform</code> 设置旋转，<a href="https://www.w3schools.com/cssref/css3_pr_transform.asp" target="_blank" rel="noopener">详细介绍看这里</a></li><li><code>animation</code> 一个简写属性，用于设置六个动画属性，<a href="https://www.w3schools.com/cssref/css3_pr_animation.asp" target="_blank" rel="noopener">详细介绍看这里</a></li></ul><p>#更合理的思路</p><blockquote><p>利用遮罩和裁剪的思想。</p><ul><li>想象你有一个浅蓝色的圆圈，一个浅蓝色的半圆圈，一个深蓝色的半圆圈，三个半径一样大；</li><li>浅蓝色半圆圈，深蓝色半圆圈，浅蓝色圆圈，从上往下依次堆叠放置；</li><li>这时候，你会发现将中间那层深蓝色半圆圈稍作转动，从上忘下俯视，就会发现有你要的效果；</li></ul></blockquote><ul><li><p><code>HTML</code>设计如下<br><img src="http://upload-images.jianshu.io/upload_images/2190281-43cc5c9cccd949ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="HTML结构"></p></li><li><p>最外层<code>div</code>设置宽度为<code>10px</code>的<code>border</code>，让里面内容居中<br><img src="http://upload-images.jianshu.io/upload_images/2190281-89c10928d3574f54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="设置大小和内容居中"></p></li><li><p>给内层第一个<code>div</code>（深蓝色半圆圈）设置<code>border</code>，裁剪右半部分，并让其顺时针旋转90°<br><img src="http://upload-images.jianshu.io/upload_images/2190281-217849ef81029ded.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>给外层<code>div</code>设置两个伪元素，分别是<code>after</code>（浅蓝色半圆圈）和<code>before</code>（浅蓝色圆圈）<br><img src="http://upload-images.jianshu.io/upload_images/2190281-8d6d2d46ef5da1ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="before"><br><img src="http://upload-images.jianshu.io/upload_images/2190281-7c9d6c5a2c54c181.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="after裁剪右半部分"></p></li></ul><p>#让它动起来<br>设置从0°开始顺时针旋转90°<br><img src="http://upload-images.jianshu.io/upload_images/2190281-ebb23f5b374895cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="利用animation一些属性"></p><p>这样，一个动态的圆环就成功啦。</p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#效果展示&lt;br&gt;没掌握上传动图的操作，这里就先截静态图吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2190281-be2ac373c69142a4.png?imageMogr2/auto
      
    
    </summary>
    
      <category term="Web 前端" scheme="https://www.wdanna.com/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Pecha Kucha - Constellations</title>
    <link href="https://www.wdanna.com/Pecha%20Kucha%20--%20Constellations/"/>
    <id>https://www.wdanna.com/Pecha Kucha -- Constellations/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>Hello everyone, Tonight my topic is about constellations.<br>Do you know about every one’s charactor of your friends and colleagues？<br>Anyway,    I’m not! I often like ask them, Whats your sign? </p></li><li><p>There are two versions of the sign origin.One is basic on the ancient Greek mythology,Another one  is more scientific.<br>It says the twelve constellations is the sign of the zodiac to mark the sun’s position.</p></li><li><p>The first is the Aries,  The fire element of Aries full of energy and they also very active.<br>but sometimes impatient. Your persistence will lead you to success. </p></li><li><p>The second is the Taurus, The most traditional one. Taurus’s element is earth. That’s bring the  strength  for life. You might be a little bit slow-witted, but your consistency will make it up.</p></li><li><p>Gemini usually express their love through speech and mental activities,<br>Gemini’s element is air,  They good at communication and intellect<br>Your mutable motivation brings adaptability.</p></li><li><p>Cancer has a great need for love, Cancer’s element is water.<br>water signs need to give and receive.<br>So for yours good memory is your born gift. </p></li><li><p>Leo is fire to the core!  Fire desire to create and innovate.<br>For leo’s tips is You have fixed motivation and self-reliance. </p></li></ol><p>But remember to balance self-confidence with humility</p><ol start="8"><li><p>Virgo has  a bit picky and they devote to perfection and also works hard.<br>A good educational background is important. Diligence is your advantage</p></li><li><p>Libra represents the air element. It is a sign that is more easygoing and active. their life is devote to having all things in harmony and relationships at peace,<br>Your great need to share; to be fair will help you a lot.</p></li><li><p>Scorpios(sigaopiers) are deeply emotional, also is a water element, and this makes it an enigmatic sign,<br>Study would never be a problem .  Maybe you need more confidence.</p></li><li><p>Sagittarius(sangiteres) is a fire element. This is a very energetic and easygoing sign, They enjoy life and have a good sense of humor . and also they are very lucky.<br>You have more talent. But you still need to concentrate more.</p></li><li><p>Capricorn(canprikao) is the leader of the Earth signs. They has a strength force, one of the hardest-working sign of the Zodiac,<br>They love working and often successful, Patience and caution are your advantages</p></li><li><p>Aquarius has many epitomes(Eptemi) and  the planet inspire it. This sign has the most  communication skill and also has a lot of adaptabilities.<br>For you need to  try many new things and never end up.</p></li><li><p>Pisces is a Water element.  This sign is extremely receptive and compassionate and  like to dream about everything.</p></li></ol><p>That’s all twelve constellations charactor.</p><ol start="15"><li><p>As the picture show, The servel most  of all constellations. Geminni has the highest IQ,  Most like adventure and freedom is Sagittarius, Most patient and calm is Taurus. Has most emotinal is Scorpios.</p></li><li><p>The twelve also has their own symbol，Because the stars in the sky distribution is not uniform,<br>In order to remember the location of the stars,  the human beings put the stars  with so many characters</p></li><li><p>And  As I know there are at least three person have the same sign of me.  So I find some photos to explain our constellation.</p></li><li><p>For us , we enjoy our  life and love laughing love travell, love to challenge fresh things. and also have many gifts in life </p></li><li><p>We are often crazy and full of  energy and like imagine every thing,  if there are unpleasant things happing,  we always can make it in the optimistic direction. </p></li><li><p>we like all kind of  outdoor activities and always be full of curiosity<br>So you already guess our sign? Yes, We’are Sagittarius. Holpful this could help you know more abour youself and  others, Thank you listen to my story.</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;Hello everyone, Tonight my topic is about constellations.&lt;br&gt;Do you know about every one’s charactor of your friends and colleag
      
    
    </summary>
    
      <category term="当学习开始有趣的时候" scheme="https://www.wdanna.com/%E5%BD%93%E5%AD%A6%E4%B9%A0%E5%BC%80%E5%A7%8B%E6%9C%89%E8%B6%A3%E7%9A%84%E6%97%B6%E5%80%99/"/>
    
    
  </entry>
  
  <entry>
    <title>Jenkins安装和配置</title>
    <link href="https://www.wdanna.com/Jenkins%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.wdanna.com/Jenkins安装和配置/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、作用"><a href="#一、作用" class="headerlink" title="一、作用"></a>一、作用</h2><p>项目中一直在用<code>Jenkins</code>，但自己对这部分的开发参与的不是很多，最近准备毕设的时候才开始慌了，倒腾了大半天，之前也有人问我，就准备整理了下相关知识，也便以后回顾。</p><p>我们在做项目的时候简单来说一般会有这五个步骤，<strong>开发—&gt;提交—&gt;编译—&gt;测试—&gt;部署</strong>。人工的流程走就是把项目同步到<code>Git</code>，再用 <code>SSH</code> 登录服务器把项目<code>pull</code>下来，再<code>migrate</code>数据库，运行单元测试和迁移静态资源，项目每天都会有若干个<code>commit</code>，在多人开发中带来许多的不便。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-7b40d6e8d66d6c15.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Jenkins管家"></p><p>为了减轻人为的操作，就可以使用<code>Jenkins</code>来对项目进行持续集成。它可以帮你在写完代码后，一键完成开发过程中的一系列工作，就比如上面五个步骤中，除了第一步，后续的四步都可以自动化完成。具体的，当你完成了提交，Jenkins会自动运行你的编译脚本，编译成功后，再运行你的测试脚本，这一步成功后，接着它会帮你把新程序发布出去，完成部署。</p><blockquote><p>Jenkins是一个持续集成工具，如大家所说相当于一个调度平台，如果你的目的只是自动化部署的话，直接自己写脚本或者用<code>Ansible</code>、<code>Salt</code>、<code>Puppet</code>、<code>Chef</code>、<code>Fabric</code>等自动化部署工具就行如果你是想在<code>job</code>中加入自动话部署流程的话，可以先写好自动化部署脚本然后在<code>Jenkins</code>构建任务的<code>Execute Shell</code>中调用相应的<code>Script</code>。</p></blockquote><p>重复单一易出错的操作将慢慢被机器所取代，具体到软件开发中就是，每次打包送测等操作是可以交给机器去自动执行的。以前打包给测试的流程是，测试拿了好几个手机过来，开发一一安装，然后送给测试慢慢测试。使用了持续集成之后将变成，开发本地提交代码，Jenkins等持续集成工具监测到代码变化，自动编译打包，生成开发包，测试直接拿着开发包安装测试即可。Jenkins做的操作其实很简单，它只是将我们平时做的每一步重复的操作自动化了而已。</p><h2 id="二、安装（ubuntu16-04）"><a href="#二、安装（ubuntu16-04）" class="headerlink" title="二、安装（ubuntu16.04）"></a>二、安装（ubuntu16.04）</h2><p><em><code>Jenkins</code>是开源的,使用<code>Java</code>编写的持续集成的工具</em><br>首先需要先安装<code>Java</code>，再执行以下步骤</p><ul><li><p>添加LTS版本PPA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget -q -O - http://pkg.jenkins-ci.org/debian-stable/jenkins-ci.org.key | sudo apt-key add -</span><br><span class="line">$ sudo sh -c &apos;echo deb http://pkg.jenkins-ci.org/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list&apos;</span><br></pre></td></tr></table></figure></li><li><p>更新源并安装Jenkins</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install jenkins</span><br></pre></td></tr></table></figure></li><li><p>安装后，Jenkins默认在8080端口上启动，如果8080被用，可以配置其他，比如配置为8088</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">编辑 /etc/default/jenkins  并更新HTTP_PORT到8088。</span><br><span class="line"></span><br><span class="line"> HTTP_PORT=8088</span><br></pre></td></tr></table></figure></li><li><p>启动<code>Jenkins</code>服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service jenkins start</span><br></pre></td></tr></table></figure></li><li><p>关闭<code>Jenkins</code>服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service jenkins stop</span><br></pre></td></tr></table></figure></li></ul><p>这时已经安装成功，可以在浏览器访问<code>localhost:8088</code></p><ul><li><p>首次进入，首先要输入一个密钥来进入<code>Jenkins</code>,密钥可以在 /var/lib/jenkins/secrets/initialAdminPassword 获取<br><img src="http://upload-images.jianshu.io/upload_images/2190281-d816e580280de86b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="复制命令行的密码粘过来"></p></li><li><p>选择相应的选项来安装插件，选择系统推荐即可<br><img src="http://upload-images.jianshu.io/upload_images/2190281-7a11c5f5cd155f2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="installplugins.png"></p></li><li><p>会有失败的情况，我搜了下，说不影响，很多由于从国外的网站下，失败很正常，直接进行下一步，后面也可以再安装<br><img src="http://upload-images.jianshu.io/upload_images/2190281-84c6ee6fd61c1f05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>接下来可以为Jenkins设置一个管理员帐户，以后就可以用它登录到Jenkins了<br><img src="http://upload-images.jianshu.io/upload_images/2190281-619a6e9a88edba98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="填写即可"></p></li><li><p>Jenkins安装向导成功完成后，就可以看到这个页面啦<br><img src="http://upload-images.jianshu.io/upload_images/2190281-c6dff5b5813401af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="weblcome.png"></p></li></ul><h2 id="三、安装插件"><a href="#三、安装插件" class="headerlink" title="三、安装插件"></a>三、安装插件</h2><p><code>Jenkins</code>提供了非常多的插件，几乎你想要的插件全有，前提是你能找的到~官网提供了插件搜索功能，选择<code>Plugins</code>页就可以各种搜索了。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-9f9847b0a103b368.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="manage jenkins"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-5c4dc2562e6789b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="plugins"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-a98ce285d172371f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="search plugins"></p><p>安装完成之后重启<code>Jenkins</code></p><p>这里推荐我们使用的几个插件</p><ul><li><p>要用Jenkins对项目进行持续集成，首先要在插件管理中下载好<code>Github Plugin</code>，使得Jenkins能操作<code>Github</code>中的仓库</p></li><li><p><code>Dashboard</code>插件可以用来定义自己的<code>Jenkins</code>主页 <a href="https://wiki.jenkins-ci.org/display/JENKINS/Dashboard+View" target="_blank" rel="noopener">Dashboard View</a><br><img src="http://upload-images.jianshu.io/upload_images/2190281-ffe470335ed10f73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="homepage.png"></p></li><li><p><code>Wall display</code> 用来将<code>jobs</code>的状态更加直观地显示在大屏幕上。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-f625e6b92ccfb555.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="display"></p></li><li><p><code>Jenkins</code>内置的邮件功能,它可根据构建的结果，发送构建报告，给当前的committer （用git做代码管理） <a href="https://link.juejin.im/?target=http%3A%2F%2Fwiki.jenkins-ci.org%2Fdisplay%2FJENKINS%2FEmail-ext%2Bplugin" target="_blank" rel="noopener">Email Extension Plugin</a> 的配置<br>开发人员<code>build project</code> 之后，build结果无论是成功还是失败，都要及时的通知组内其他成员了解最新情况，邮件通知这时候就派上用场<br><strong>不知什么原因，用QQ邮箱配置失败了，后面若成功了会把步骤贴上来，请参照这个链接 <a href="http://www.jianshu.com/p/2afb099f2a79" target="_blank" rel="noopener">jenkins邮件扩展插件的使用</a></strong></p></li></ul><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、作用&quot;&gt;&lt;a href=&quot;#一、作用&quot; class=&quot;headerlink&quot; title=&quot;一、作用&quot;&gt;&lt;/a&gt;一、作用&lt;/h2&gt;&lt;p&gt;项目中一直在用&lt;code&gt;Jenkins&lt;/code&gt;，但自己对这部分的开发参与的不是很多，最近准备毕设的时候才开始慌了，倒
      
    
    </summary>
    
      <category term="DevOps" scheme="https://www.wdanna.com/DevOps/"/>
    
    
  </entry>
  
  <entry>
    <title>React那些事</title>
    <link href="https://www.wdanna.com/React%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>https://www.wdanna.com/React那些事/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>React是=起源于 Facebook 的内部项目，因为该公司对市场上所有 JavaScript MVC 都不满意，就决定自己写一套，用来架设 <a href="https://instagram.com/" target="_blank" rel="noopener">Instagram</a> 的网站，2013年5月开源</p><h2 id="WHAT"><a href="#WHAT" class="headerlink" title="WHAT"></a>WHAT</h2><p>官网是这样解释的 —— <strong>A JavaScript library for building user interfaces</strong>，三大特性如下：</p><ul><li><strong>Declarative</strong><br>声明式编程，告诉机器你想要什么（What），让机器想出如何做（How），<br>对应的是命令式编程，命令机器如何去做某件事（How），而不管你要的是什么，它都会按照你的命令实现。</li><li><strong>Component-Based</strong><br>任何一个功能独立的模块都定义成组件，一个个组件通过不断复用，组合与嵌套，构成一套完整的UI界面。</li><li><strong>Learn Once, Write Anywhere</strong></li></ul><h2 id="核心思想"><a href="#核心思想" class="headerlink" title="核心思想"></a>核心思想</h2><h4 id="组件化思想"><a href="#组件化思想" class="headerlink" title="组件化思想"></a><strong>组件化思想</strong></h4><p>React 让我们重新规划界面，把任何一个功能独立的模块都定义成组件，即被独立封装的可复用 UI 部件。一个个的组件通过不断复用，组合与嵌套等，构成一套完整的 UI 界面。</p><p>一个组件的写法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &apos;react&apos;;</span><br><span class="line">import &#123; render &#125; from &apos;react-dom&apos;;</span><br><span class="line"></span><br><span class="line">class HelloMessage extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return &lt;div&gt;Hello &#123;this.props.name&#125;&lt;/div&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">render(&lt;HelloMessage name=&quot;world&quot; /&gt;, mountNode);</span><br></pre></td></tr></table></figure><p><code>render</code>会把这个组件显示到页面上的某个元素<code>mountNode</code>里面，显示的内容就是<div>Hello world</div></p><p>组件的划分</p><ul><li><p>把 UI 划分出组件层级，可以想想<strong>什么情况下我们需要新建一个函数或对象</strong>）</p><ul><li>单一功能原则， DRY</li><li>一个组件应该只做一件事情。如果这个组件功能不断丰富，它应该被分成更小的组件</li></ul></li></ul><h4 id="JSX语法——有些人喜欢它，而其他人认为这是一个很大的退步，"><a href="#JSX语法——有些人喜欢它，而其他人认为这是一个很大的退步，" class="headerlink" title="JSX语法——有些人喜欢它，而其他人认为这是一个很大的退步，"></a><strong>JSX语法</strong>——有些人喜欢它，而其他人认为这是一个很大的退步，</h4><blockquote><p>不得不说是一种非常聪明的做法，JSX代替传统的HTML Templates，让前端实现真正意义上的组件化成为了可能</p></blockquote><p>HTML直接嵌入了JS代码里面，前端被“表现和逻辑层分离”这种思想“洗脑”太久了，可能不好接受的设定之一。</p><p>实际上组件的HTML是组成一个组件不可分割的一部分，能够将HTML封装起来才是组件的完全体，React发明了JSX让JS支持嵌入HTML，但它具有无可争议的优点：静态分析，JSX标记中发生错误，编译器会立即报错而不是留待运行时出现莫名其妙的问题。这有助于开发人员快速排查错误以及避免其它愚蠢的错误，比如拼写错误。</p><p>好处是你可以不一定使用这种语法，但是要使用包含JSX 的组件，是需要“编译”输出JS 代码才能使用的</p><h4 id="Virtual-DOM"><a href="#Virtual-DOM" class="headerlink" title="Virtual DOM"></a>Virtual DOM</h4><p>DOM是什么？</p><blockquote><p>DOM是Document Object Model，就是将XML（或者HTML）内的节点定义成基本统一的对象数据可以供程序语言（如javaScript）控制的技术规范<br>通过 DOM 你可以改变网页。</p></blockquote><p>你可以使用 Javascript 语言来操作 DOM 以改变网页。</p><p>为了改变网页，你必须告诉 Javascript 改变哪一个节点。这就是操作 DOM。</p><p>真正的 DOM 元素非常庞大，这是因为标准就是这么设计的。而且操作它们的时候你要小心翼翼，轻微的触碰可能就会导致页面重排，这可是杀死性能的罪魁祸首。</p><p>React 最大的特色是当View层在渲染的时候,它不会直接从模板里面去构建一个DOM节点. 首先, 它创建一些暂时的, 虚拟的 DOM, 然后和真实的DOM还有创建的Diffs一起做对比, 然后才决定需不需要渲染。</p><p>当组件状态state有更改的时候，React会自动调用组件的render方法重新渲染整个组件的UI，所以React实现了一个Virtual DOM，组件DOM结构就是映射到这个Virtual DOM上，React在这个Virtual DOM上实现了一个diff算法，当要重新渲染组件的时候，会通过diff寻找到要变更的DOM节点，再把这个修改更新到浏览器实际的DOM节点上，所以实际上不是真的渲染整个DOM树。这个Virtual DOM是一个纯粹的JS数据结构，所以性能会比原生DOM快很多。</p><p>Virtual DOM 本质上就是在 JS 和 DOM 之间做了一个缓存。可以类比 CPU 和硬盘，既然硬盘这么慢，我们就在它们之间加个缓存：既然 DOM 这么慢，我们就在它们 JS 和 DOM 之间加个缓存。CPU（JS）只操作内存（Virtual DOM），最后的时候再把变更写入硬盘（DOM）</p><p>Virtual DOM 算法：</p><ul><li><p>触发相应组件render方法</p></li><li><p>重新构建新的虚拟DOM树</p></li><li><p>将当前新的虚拟DOM树和上一次的旧树进行对比</p></li><li><p>得到DOM结构的区别，计算出最小变化集，进行实际的浏览器DOM更新（批量更新）。</p></li></ul><h4 id="Data-Flow"><a href="#Data-Flow" class="headerlink" title="Data Flow"></a>Data Flow</h4><p>数据如何存放，如何更改数据，如何通知数据更改等等，单向响应的数据流，从而减少了重复代码，这也是它为什么比传统数据绑定更简单。</p><p>接受输入数据（通过 this.props ），组件还可以保持内部状态数据（通过 this.state ）当一个组件的状态数据的变化。</p><p><strong>React 组件之间交流的方式</strong></p><p>组件免不了要与用户互动，React 的一大创新，就是将组件看成是一个状态机，一开始有一个初始状态，然后用户互动，导致状态变化，从而触发重新渲染 UI。</p><ul><li>【父组件】向【子组件】传值；<br>父组件的数据可以通过设置子组件的props传递数据给子组件</li><li>【子组件】向【父组件】传值；<br>可以在父组件中传一个callback(回调函数)给子组件，子组件内调用这个callback即可改变父组件的数据</li><li>兄弟组件之间传值<br>没有任何嵌套关系的组件之间传值（PS：比如：兄弟组件之间传值）<br>当两个组件不是父子关系，但有相同的父组件时，将这两个组件称为兄弟组件。兄弟组件不能直接相互传送数据，此时可以将数据挂载在父组件中，由两个组件共享：如果组件需要数据渲染，则由父组件通过props传递给该组件；如果组件需要改变数据，则父组件传递一个改变数据的回调函数给该组件，并在对应事件中调用。</li></ul><p>写了个简单的例子如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">//孙子，将下拉选项的值传给爷爷</span><br><span class="line">var Grandson = React.createClass(&#123;</span><br><span class="line">    render: function()&#123;</span><br><span class="line">        return (</span><br><span class="line">            &lt;div&gt;性别：</span><br><span class="line">                &lt;select onChange=&#123;this.props.handleSelect&#125;&gt;</span><br><span class="line">                    &lt;option value=&quot;男&quot;&gt;男&lt;/option&gt;</span><br><span class="line">                    &lt;option value=&quot;女&quot;&gt;女&lt;/option&gt;</span><br><span class="line">                &lt;/select&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">//子，将用户输入的姓名传给爹  </span><br><span class="line">//对于孙子的处理函数，父只需用props传下去即可</span><br><span class="line">var Child = React.createClass(&#123;</span><br><span class="line">    render: function()&#123;</span><br><span class="line">        return (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                姓名：&lt;input onChange=&#123;this.props.handleVal&#125;/&gt;</span><br><span class="line">                &lt;Grandson handleSelect=&#123;this.props.handleSelect&#125;/&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">//父组件，准备了两个state，username和sex用来接收子孙传过来的值，对应两个函数handleVal和handleSelect</span><br><span class="line">var Parent = React.createClass(&#123;</span><br><span class="line">    getInitialState: function()&#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            username: &apos;&apos;,</span><br><span class="line">            sex: &apos;&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleVal: function(event)&#123;</span><br><span class="line">        this.setState(&#123;username: event.target.value&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleSelect: function(event) &#123;</span><br><span class="line">        this.setState(&#123;sex: event.target.value&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    render: function()&#123;</span><br><span class="line">        return (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;div&gt;用户姓名：&#123;this.state.username&#125;&lt;/div&gt;</span><br><span class="line">                &lt;div&gt;用户性别：&#123;this.state.sex&#125;&lt;/div&gt;</span><br><span class="line">                &lt;Child handleVal=&#123;this.handleVal.bind(this)&#125; handleSelect=&#123;this.handleSelect.bind(this)&#125;/&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">React.render(</span><br><span class="line">  &lt;Parent /&gt;,</span><br><span class="line">  document.getElementById(&apos;test&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><ul><li><p>Props 传递数据</p><blockquote><p>如果组件嵌套层次太深，那么从外到内组件的交流成本就变得很高，通过 props 传递值的优势就不那么明显了。所以个人建议尽可能的减少组件的层次，就像写 HTML 一样，简单清晰的结构更惹人爱）</p></blockquote></li><li><p>难的地方<br>在创建应用的每一个 state之前要做的：</p></li><li>确定每一个需要这个 state 来渲染的组件。</li><li>找到一个公共所有者组件(一个在层级上高于所有其他需要这个 state 的组件的组件)</li><li>这个公共所有者组件或另一个层级更高的组件应该拥有这个 state。</li><li>如果你没有找到可以拥有这个 state 的组件，创建一个仅用来保存状态的组件并把它加入比这个公共所有者组件层级更高的地方</li><li>当应用足够复杂时才能体会到它的好处，虽然在一般应用场景下你可能不会意识到它的存在</li></ul><p>兄弟组件的沟通的解决方案就是找到两个组件共同的父组件，一层一层的调用上一层的回调，再一层一层地传递props。如果组件树嵌套太深，就会出现如下惨不忍睹的组件亲戚调用图</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-98d607e2b049be45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li>全局事件<br>Context 使用上下文可以让子组件直接访问祖先的数据或函数，无需从祖先组件一层层地传递数据到子组件中</li></ul><h2 id="第三方的类库"><a href="#第三方的类库" class="headerlink" title="第三方的类库"></a>第三方的类库</h2><p>React让我们有很大的自由度去挑选第三方的类库，比如</p><ul><li><p><a href="https://link.juejin.im/?target=https%3A%2F%2Freacttraining.com%2Freact-router%2Fweb%2Fguides%2Fquick-start" target="_blank" rel="noopener">路由</a>机制</p></li><li><p>AJAX（<a href="https://link.juejin.im/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fen%2Fdocs%2FWeb%2FAPI%2FFetch_API" target="_blank" rel="noopener">Fetch</a> or <a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fmzabriskie%2Faxios" target="_blank" rel="noopener">axios</a>）</p></li><li>各种CSS封装（详见：<a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FMicheleBertoli%2Fcss-in-js" target="_blank" rel="noopener">github.com/MicheleBert…</a>）</li><li>更强大的单元测试（<a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fairbnb%2Fenzyme" target="_blank" rel="noopener">Enzyme</a>）</li><li>Remarkable 渲染markdown语法</li></ul><h2 id="Redux"><a href="#Redux" class="headerlink" title="Redux"></a>Redux</h2><p>Redux是一种组织代码的推荐思想，就像 “引导数据流流向的导流管”，解决上面那幅关系复杂的亲戚图问题</p><ul><li><p>整个应用只有唯一一个可信数据源，也就是只有一个Store，如 Redux 限定一个应用中只能有单一的 store，这样的限定能够让应用中数据结果集中化，提高可控性</p></li><li><p>Action、Reducer、及 Store</p></li><li><p>State 只能通过触发Action 来更改</p></li><li>State 的更改必须写成纯函数，也就是每次更改总是返回一个新的State，在*Redux 里这种函数称为Reducer</li></ul><blockquote><p>Redux 对于组件间的解耦提供了很大的便利，如果你在考虑该不该使用 Redux 的时候，社区里有一句话说，“当你不知道该不该使用 Redux 的时候，那就是不需要的”</p></blockquote><p>Redux 用起来一时爽，重构或者将项目留给后人的时候，就是个大坑，Redux 中的 dispatch 和 subscribe 方法遍布代码的每一个角落。</p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;React是=起源于 Facebook 的内部项目，因为该公司对市场上所有 JavaScript MVC 都不满意，就决定自己写一套，用来架
      
    
    </summary>
    
      <category term="Web 前端" scheme="https://www.wdanna.com/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Reflux 实现 hello world</title>
    <link href="https://www.wdanna.com/Reflux%20%E5%AE%9E%E7%8E%B0%20hello%20world/"/>
    <id>https://www.wdanna.com/Reflux 实现 hello world/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初识Reflux"><a href="#初识Reflux" class="headerlink" title="初识Reflux"></a>初识Reflux</h2><ul><li>Reflux  是一个简单的单向数据流应用库，灵感来自于ReactJs Flux</li><li>解决了数据在React 应用中的流动方式及过程</li></ul><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><ul><li>用 <strong>Reflux</strong> 实现界面渲染 hello world</li></ul><h2 id="分解任务"><a href="#分解任务" class="headerlink" title="分解任务"></a>分解任务</h2><ol><li>使用 React 创建一个组件，在页面渲染出 <em>hello word</em></li><li>安装 Reflux</li><li>创建一个 <strong>Action</strong></li><li>创建一个 <strong>Store</strong>，用来监听<strong> Action </strong>，并且获取 <strong>Action</strong> 传递的 <em>hello world</em></li><li><strong>Store</strong> 将值传递给 <strong>Component</strong>，并且渲染到页面</li><li>将代码上传至 Github</li></ol><h2 id="分步实现任务"><a href="#分步实现任务" class="headerlink" title="分步实现任务"></a>分步实现任务</h2><ul><li>使用 React 创建一个组件，在页面渲染出 <em>hello word</em></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line"></span><br><span class="line">import React from &apos;react&apos;;</span><br><span class="line">import &#123;render&#125; from &apos;react-dom&apos;;</span><br><span class="line"></span><br><span class="line">const App = React.createClass(&#123;    </span><br><span class="line">              render:function()&#123;       </span><br><span class="line">                      return &lt;div&gt;                    </span><br><span class="line">                             hello world                </span><br><span class="line">                       &lt;/div&gt;   </span><br><span class="line">     &#125;</span><br><span class="line">&#125;);</span><br><span class="line">render(&lt;App/&gt;, document.getElementById(&quot;content&quot;));</span><br></pre></td></tr></table></figure><p>此时，使用 React 在页面渲染出 <em>hello world</em></p><ul><li><p>安装 Reflux<br> <code>npm install reflux</code></p></li><li><p>创建一个 <strong>action</strong><br><code>const action = Reflux.createActions([&#39;getHello&#39;]);</code></p></li><li><p>创建一个 <strong>store</strong>，用来监听<strong> action </strong>，并且获取 <strong>action</strong> 传递的 <em>hello world</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const store = Reflux.createStore(&#123;    </span><br><span class="line">                   listenables: [action],   </span><br><span class="line">                   onGetHello: function (hello) &#123;      </span><br><span class="line">                               this.trigger(hello);    </span><br><span class="line">                  &#125; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><p>使用 <code>listenables</code> 来监听 <strong>action </strong>，使用<code>this.trigger()</code> 来更新数据状态</p><ul><li><strong>store</strong> 将值传递给 <strong>component</strong>，并且渲染到页面<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">const App = React.createClass(&#123;   </span><br><span class="line">      mixins: [Reflux.connect(store, &quot;hello&quot;)],  </span><br><span class="line">      componentDidMount: function () &#123;       </span><br><span class="line">            action.getHello(&quot;hello world!&quot;);   </span><br><span class="line">     &#125;,    </span><br><span class="line">     render: function () &#123;       </span><br><span class="line">            return     &lt;div&gt;           </span><br><span class="line">                 &#123;this.state.hello&#125;      </span><br><span class="line">         &lt;/div&gt;   </span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></li></ul><p>使用 <code>mixins</code> 将 <strong>store</strong> 和 component 连接 ，使用<code>action .getHello()</code>调用action</p><ul><li>将代码上传至 github<br><a href="https://github.com/RangelZZZ/reflux-demo" target="_blank" rel="noopener">源代码地址</a></li></ul><h2 id="深入理解Reflux"><a href="#深入理解Reflux" class="headerlink" title="深入理解Reflux"></a>深入理解Reflux</h2><ol><li>三大主要内容<ul><li><strong>Action</strong> 是把数据从应用传到 Store 的有效载荷，是Store 数据的唯一来源，只用来描述“发生了什么”</li><li><strong>Store</strong> 负责封装应用的业务逻辑和数据交互</li><li><strong>Views（controller-views）</strong>是整个App 的 入口，监听Store 的变化以获取新的数据，重新 render 自己及子组件</li></ul></li><li><p>单向数据流<br>    Action ———————&gt; Store ——————&gt; View Component<br>     ^<br>    └───────────────────────────────────┘ </p><p>          数据和操作在三者之间单向流动</p></li><li><p>数据流动问题<br>Reflux 中主要由 Action 和 Store 组成，例：当组件 list 增加 Item 时，会调用Action 某个方法（如addItem（data）并将新的数据当参数传递进去，通过事件机制，数据会传送到 Store 中，Store 可以向服务器发送请求并提交给数据库，数据更新后，再通过事件机制传递到 list 当中，并更新 UI</p></li><li>与 Redux 的区别<ul><li>Reflux 中去除了 Redux 中的 <strong>Dispatch</strong> 和 <strong>Reducer</strong>，保留了 Action 和 Store</li><li>概念关系图对比如下：<br><img src="http://upload-images.jianshu.io/upload_images/3106897-1e94804c19b52810.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Redux概念关系图"><br><img src="http://upload-images.jianshu.io/upload_images/3106897-7ceae309157e18bb.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Reflux概念关系图"></li></ul></li><li>优缺点<ul><li>优点：单向数据流，数据流动方向可以跟踪，追查问题的时候可以跟快捷</li><li>缺点：写起来不太方便。要使UI发生变更就必须创建各种 Action 来维护对应的 State</li></ul></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>学习过程中遇到的问题<ul><li>在开始画思维导图的时候过于注重概念，没有注重实践，浪费了大量时间</li><li>在使用 ReactMixins 时因为找不到 react-mixins 的cdn，花了好长时间</li><li>由于不想使用 <code>ReactMixins.onclass()</code>方法，将 ReactMixins 改成 mixins 花了好长时间</li></ul></li><li>经验<ul><li>以后学习新知识的时候要分清问题的侧重点，确定目标后再分步学习去完成目标</li><li>学习知识要在最开始确定任务范围，尽量不引入别的新知识，增加学习负担</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;初识Reflux&quot;&gt;&lt;a href=&quot;#初识Reflux&quot; class=&quot;headerlink&quot; title=&quot;初识Reflux&quot;&gt;&lt;/a&gt;初识Reflux&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Reflux  是一个简单的单向数据流应用库，灵感来自于ReactJs Flux
      
    
    </summary>
    
      <category term="Web 前端" scheme="https://www.wdanna.com/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Ruby on rails 环境配置</title>
    <link href="https://www.wdanna.com/Ruby%20on%20rails%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.wdanna.com/Ruby on rails 环境配置/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>###配置之前<br>从开始到现在不知道怀疑了多少遍网速，从实验室的无线到有线，从学校的CMCC到EDU到xayd，不知道执行了多少遍<code>Ctrl V</code> 和 <code>Ctrl C</code>，终于，功夫不负有心人，它成功了！！！<br><img src="http://upload-images.jianshu.io/upload_images/2190281-ce46be153e9ce030.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="9788E4C3095705CD21EA9BC6C45EBCF7.jpg"></p><p>周围有同学用<code>apt-get</code>安装的，有用<code>rbenv</code>安装的，也有用<code>rvm</code>安装的，这里简单介绍下它们分别是什么吧</p><blockquote><p>rvm 的设计理念是自动化，全面。 rbenv 的设计理念是规范化，小核。</p></blockquote><ul><li><code>apt-get</code>只能安装一个版本，如果使用了<code>sudo apt-get update</code>后安装则是最新的版本</li><li><code>rvm</code>和<code>rbenv</code>都是<code>Ruby</code>的版本管理工具，都可以安装多个<code>Ruby</code>版本，<code>rvm</code>应该是最早出现、使用最多的，<code>rbenv</code> 比较受欢迎，所以选择哪个自己看喽，本人使用的是<code>rbenv</code>安装，</li></ul><p>###配置步骤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cd $HOME</span><br><span class="line">$ sudo apt-get update </span><br><span class="line">$ sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev</span><br><span class="line"></span><br><span class="line">$ git clone https://github.com/rbenv/rbenv.git ~/.rbenv</span><br><span class="line">$ echo &apos;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">$ echo &apos;eval &quot;$(rbenv init -)&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">$ exec $SHELL</span><br><span class="line"></span><br><span class="line">$ git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build</span><br><span class="line">$ echo &apos;export PATH=&quot;$HOME/.rbenv/plugins/ruby-build/bin:$PATH&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">$ exec $SHELL</span><br></pre></td></tr></table></figure><p>确保每一步执行成功后，更改rvm源服务器资源信息，毕竟国外的经常被墙掉，还有就是国内的速度快。若不设置，下面可能出现各种问题，如出现服务器积极拒绝（被墙），或者下载速度慢，执行以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed -i -e &apos;s/ftp\.ruby-lang\.org\/pub\/ruby/ruby\.taobao\.org\/mirrors\/ruby/g&apos; ~/.rvm/config/db</span><br></pre></td></tr></table></figure></p><p>查看<code>rbenv</code>版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rbenv -v</span><br><span class="line">rbenv 1.1.0</span><br></pre></td></tr></table></figure></p><p>查看可用的 ruby版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rbenv install --list</span><br></pre></td></tr></table></figure></p><p>这里我选择安装最新版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ rbenv install 2.3.3</span><br><span class="line">Downloading ruby-2.3.3.tar.bz2...</span><br><span class="line">-&gt; https://cache.ruby-china.org/pub/ruby/2.3/ruby-2.3.3.tar.bz2</span><br><span class="line">Installing ruby-2.3.3...</span><br><span class="line">Installed ruby-2.3.3 to /home/xx/.rbenv/versions/2.3.3</span><br></pre></td></tr></table></figure></p><p>设置全局版本（全局版本是在没有找到“当前终端”或“本地”作用域的设置时执行）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rbenv global 2.3.3</span><br></pre></td></tr></table></figure></p><p>查看安装的<code>ruby</code>版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ruby -v</span><br><span class="line">ruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-linux]</span><br></pre></td></tr></table></figure></p><p><code>gem</code>就是<code>ruby</code>的软件包.，所以可以直接使用<code>gem</code><br><code>bundle</code>是<code>rails</code>框架里面安装<code>Gemfile</code>指定的各种库的工具，先安装了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ gem install bundler</span><br><span class="line">Fetching: bundler-1.13.6.gem (100%)</span><br><span class="line">Successfully installed bundler-1.13.6</span><br><span class="line">Parsing documentation for bundler-1.13.6</span><br><span class="line">Installing ri documentation for bundler-1.13.6</span><br><span class="line">Done installing documentation for bundler after 6 seconds</span><br><span class="line">1 gem installed</span><br></pre></td></tr></table></figure><p>接下来这条命令的作用<a href="https://rubygems.org/gems/rbenv-rehash/versions/0.3" target="_blank" rel="noopener">看这里</a>，我试了不执行就会出错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rbenv rehash</span><br></pre></td></tr></table></figure></p><p>###Ruby和Rails的关系</p><blockquote><p><strong>Ruby</strong>是编辑语言，Rails是基于Ruby来实现的一个用于网站开发的MVC框架，学习Rails需要一些Ruby的基础知识，先学Ruby</p></blockquote><blockquote><p><strong>Ruby on Rails</strong>（官方简称为 Rails。也有人简称为 RoR，该缩写目前仍于一些中文讨论中被使用。），是一个使用<a href="https://zh.wikipedia.org/wiki/Ruby" target="_blank" rel="noopener">Ruby</a>语言写的<a href="https://zh.wikipedia.org/wiki/%E5%BC%80%E6%BA%90" target="_blank" rel="noopener">开源</a><a href="https://zh.wikipedia.org/wiki/Web%E5%BA%94%E7%94%A8%E6%A1%86%E6%9E%B6" target="_blank" rel="noopener">Web應用框架</a>，它是严格按照<a href="https://zh.wikipedia.org/wiki/MVC" target="_blank" rel="noopener">MVC</a>结构开发的。它努力使自身保持简单，来使实际的应用开发时的代码更少，使用最少的配置。<br>安装<code>rails</code></p></blockquote><p>###安装Rails<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ gem install rails</span><br><span class="line">Fetching: nokogiri-1.6.8.1.gem (100%)</span><br><span class="line">Building native extensions.  This could take a while...</span><br><span class="line">Successfully installed nokogiri-1.6.8.1</span><br><span class="line">Fetching: loofah-2.0.3.gem (100%)</span><br><span class="line">Successfully installed loofah-2.0.3</span><br><span class="line">Fetching: rails-html-sanitizer-1.0.3.gem (100%)</span><br><span class="line">Successfully installed rails-html-sanitizer-1.0.3</span><br><span class="line">Fetching: rails-dom-testing-2.0.1.gem (100%)</span><br><span class="line">Successfully installed rails-dom-testing-2.0.1</span><br><span class="line">Fetching: builder-3.2.2.gem (100%)</span><br><span class="line">Successfully installed builder-3.2.2</span><br><span class="line">...</span><br><span class="line">Done installing documentation for nokogiri, loofah, rails-html-sanitizer, rails-dom-testing, builder, erubis, actionview, actionpack, activemodel, arel, activerecord, globalid, activejob, mime-types-data, mime-types, mail, actionmailer, nio4r, websocket-extensions, websocket-driver, actioncable, thor, method_source, railties, sprockets, sprockets-rails, rails after 45 seconds</span><br><span class="line">27 gems installed</span><br></pre></td></tr></table></figure></p><p>成功后查看版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rails -v</span><br><span class="line">Rails 5.0.0.1</span><br></pre></td></tr></table></figure></p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###配置之前&lt;br&gt;从开始到现在不知道怀疑了多少遍网速，从实验室的无线到有线，从学校的CMCC到EDU到xayd，不知道执行了多少遍&lt;code&gt;Ctrl V&lt;/code&gt; 和 &lt;code&gt;Ctrl C&lt;/code&gt;，终于，功夫不负有心人，它成功了！！！&lt;br&gt;&lt;img s
      
    
    </summary>
    
      <category term="Web 前端" scheme="https://www.wdanna.com/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Security in DNA</title>
    <link href="https://www.wdanna.com/Security%20in%20DNA/"/>
    <id>https://www.wdanna.com/Security in DNA/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>第三周周的第一天，不得不说，时间真的很快，早上的一个session是关于Security的，听的不是很懂，临走前pair被一个问题卡住了，虽然不是什么大问题，但还是挺影响心情的。</p><p>商量了team outing的事情，也总算有了着落，第一次的case study，虽然没有完全看完，但真的是尽力了，还是没有调整到很好的状态，但如果没有感觉错，应该比之前好些吧，总之，又是一周事情很多的时候。</p><h2 id="Security-about-DNA"><a href="#Security-about-DNA" class="headerlink" title="Security about DNA"></a>Security about DNA</h2><h2 id="Threat-modelling"><a href="#Threat-modelling" class="headerlink" title="Threat modelling"></a>Threat modelling</h2><ul><li>Structured</li><li>Indentify quantify</li><li>Secrity built in from the begining</li></ul><h2 id="Asset"><a href="#Asset" class="headerlink" title="Asset"></a>Asset</h2><p>Data: customer produce order admin<br>Detail:employee</p><h2 id="Atackers"><a href="#Atackers" class="headerlink" title="Atackers"></a>Atackers</h2><ul><li>Script kides</li><li>compeiters</li><li>Employees</li><li>criminals</li><li>hackers</li><li>employees</li><li>customer</li><li>Competitors of TW</li></ul><h2 id="Threat-category"><a href="#Threat-category" class="headerlink" title="Threat category"></a>Threat category</h2><ul><li>Spoofing<br>Impersonating(扮演) sth. Or someone else<authentication></authentication></li><li>Tampering<br>Modify data or code<integrity></integrity></li><li>Repudiation<br>Such as search logs for dentity attacker  and delete it.&lt;logging, Auditing&gt;</li><li>Information disclosure<br>Exposing information to someonw not authorised to see it.<confic hatity=""></confic></li><li>Denial of service<br>Demy or degrade service to users <availability></availability></li><li>Elecation of privilege<br>Gain capabilities without using proper anthrisation<authorisation></authorisation></li></ul><h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><ul><li>Have security mindset</li><li>Think the way attackers would think</li><li>Find serity problems early</li><li>Refer to it during analysis and picking up stories</li><li>Considered during development and testing</li><li>Continuously updated as scope and understanding</li></ul><h2 id="Roles"><a href="#Roles" class="headerlink" title="Roles"></a>Roles</h2><p>Everyone</p><p>Think about security risks and threats</p><h2 id="team-outing"><a href="#team-outing" class="headerlink" title="team outing"></a>team outing</h2><p>又验证了一个真理，坐在一起面谈比对着屏幕码字效率高很多，虽然最后对于money的事情不是特别满意，但是总归比以前好了，但愿这周可以顺利些。</p><h2 id="Pair"><a href="#Pair" class="headerlink" title="Pair"></a>Pair</h2><p>让我感触最深也让我意识到的一个问题是，完美主义，之前一个小功能写不出来的时候，很多时候， 是因为同时同时思考着怎么让代码更简单，这样很容易将注意力转移，导致效率会慢些，今天遇到一个问题的时候，自己还沉浸在找为什么的时候，pair说不妨我们先实现功能，然后再想着重构，讲真，看着那时候我们写的代码，真的很难受，但是她说的真真切切是对的，先实现需求，再重构，把注意力集中在一件事情上，或许是我今后需要注意的地方。</p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第三周周的第一天，不得不说，时间真的很快，早上的一个session是关于Security的，听的不是很懂，临走前pair被一个问题卡住了，虽然不是什么大问题，但还是挺影响心情的。&lt;/p&gt;
&lt;p&gt;商量了team outing的事情，也总算有了着落，第一次的case study
      
    
    </summary>
    
      <category term="当学习开始有趣的时候" scheme="https://www.wdanna.com/%E5%BD%93%E5%AD%A6%E4%B9%A0%E5%BC%80%E5%A7%8B%E6%9C%89%E8%B6%A3%E7%9A%84%E6%97%B6%E5%80%99/"/>
    
    
  </entry>
  
  <entry>
    <title>TWU那些曾经不认识的单词们</title>
    <link href="https://www.wdanna.com/TWU%E9%82%A3%E4%BA%9B%E6%9B%BE%E7%BB%8F%E4%B8%8D%E8%AE%A4%E8%AF%86%E7%9A%84%E5%8D%95%E8%AF%8D%E4%BB%AC/"/>
    <id>https://www.wdanna.com/TWU那些曾经不认识的单词们/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>在TWU（ThoughtWorks University）的这段时间，有一点特别深的感触，那就是单词，很多应该知道却不知道，应该应该见过却没见过的，很多见过但没有记住意思的，很多要是去之前就知道的话，或许能学到的会更多些。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-1fd8d4d78273db99.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>如果知道它们的意思，也不至于因为一两个单词影响整个session的理解，有些可以本理解的东西就那样错过了，有些知道答案的的问题也就那样过去了。</p><p>当然，你完全可以不知道就直接问coach或者小伙伴，都是可以的，但有时候由于时间等等各种因素，不是每次都能及时知道每个单词的意思，所以我觉得如果提前知道，当然最好了。</p><p>想在这里整理一些单词，但当然只是基于我的词汇量的，可能不全，但也是一个回顾加深记忆的过程，但愿也能帮到后面去TWU的小伙伴们吧，哈哈，英语这东西，还是得时时刻刻练着的。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-dbfc56429dd4e9eb.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li>minutes 分钟，会议记录（之前都不知道还有这个意思）</li><li>literally 逐字地; 照字面地</li><li>constraints 约束</li><li>contract 合约</li><li>negotiable 可协商的</li><li>inference 结论，推论结果</li><li>conserve 保存</li><li>compelled 被迫</li><li>domestic 国内的（机场到处可见）</li><li>assumption 假设</li><li>oriented 定向的</li><li>encapsulation 封装 包装</li><li>segregation 隔离</li><li>immutable 不可变的</li><li>beam 横梁</li><li>polymorphism 多态</li><li>recap 扼要重述</li><li>harasser 骚扰者</li><li>fidelity 保真度</li><li>collaborate 合作</li><li>composition 组成</li><li>bouncing 跳跃的</li><li>inclusive 包括…的</li><li>alism 主义</li><li>empathise 同情的人</li><li>divergent 分歧的</li><li>onboarding 入职</li><li>anti 反对的</li><li>dominant 占优势的</li><li>agenda 议程</li><li>forgery 伪造</li><li>mitigate 使缓和，使减轻</li><li>terminate 有限的，有结尾的</li><li>pitfalls 陷阱</li><li>strategy 策略，计谋</li><li>consume 消耗，消费</li><li>inconsistency 矛盾</li><li>paradigmatic 范式</li><li>ethnographic 民族志</li><li>menial 卑微的</li><li>expats 移居国外者</li><li>humility 谦卑，谦逊</li><li>jerk 性情古怪的人</li><li>facilitate 便利</li><li>compromise 妥协</li><li>perception 感知，认识，观念</li><li>integrity 廉正</li><li>financial 金融的，财政的</li><li>damaged 禁止</li><li>mindset 心态，习惯</li><li>attackers 攻击者</li><li>structured 机构化的</li><li>asset 资产，有利条件</li><li>competitors 对手</li><li>overall 全部的，全体的</li><li>assessment 评价，评估</li><li>inequality 不平等</li><li>canary 金丝雀</li><li>infrastructure 基础设施</li><li>monitoring 监控</li><li>metrics 度量</li><li>profit 利润，利益</li><li>forecast 预测，预报</li><li>utilization 采用</li><li>reputation 声誉，好名声</li><li>radiator 散热器 </li><li>paradigm 范例</li><li>dynamically 动态</li><li>imperialism 帝国主义</li><li>imperialism 增强，加强</li><li>cascade 层叠</li><li>politely 客气地，委婉地</li><li>corresponding 相应地</li><li>ideographic 表意的</li><li>derivative 衍生的</li></ul><blockquote><p>最后附上TWU的清单</p></blockquote><p>飞机： 开通国际漫游 箱子贴易碎 飞机要个毯子 护肤品放箱子</p><ul><li>方便面</li><li>榨菜  老干妈</li><li>锅 火锅料</li><li>零食  口香糖</li><li>鞋子（3双），拖鞋</li><li>充电器（电脑、手机）吹风机</li><li>碗筷 饭盒</li><li>洗漱用品</li></ul><ul><li>3身衣服（短袖 长裤 长裙 外套 背心 ）</li><li>床单，被罩</li><li>U型枕</li><li>网线  插板</li><li>伞 卫生纸</li><li>电脑延长线</li><li>电脑（随身）</li><li>充电宝（随身）</li><li>花露水 感冒药</li><li>拉肚子的药 创可贴</li><li>信用卡 护照</li><li>身份证 卢比  银行卡</li></ul><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在TWU（ThoughtWorks University）的这段时间，有一点特别深的感触，那就是单词，很多应该知道却不知道，应该应该见过却没见过的，很多见过但没有记住意思的，很多要是去之前就知道的话，或许能学到的会更多些。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://u
      
    
    </summary>
    
      <category term="黄昏见证了最忠实的信徒" scheme="https://www.wdanna.com/%E9%BB%84%E6%98%8F%E8%A7%81%E8%AF%81%E4%BA%86%E6%9C%80%E5%BF%A0%E5%AE%9E%E7%9A%84%E4%BF%A1%E5%BE%92/"/>
    
    
  </entry>
  
  <entry>
    <title>Trello 无法打开</title>
    <link href="https://www.wdanna.com/Trello%20%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80/"/>
    <id>https://www.wdanna.com/Trello 无法打开/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>一直用的好好的<code>Trello</code>，某天打开它却突然成了这个样子，什么鬼……</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-557afbbd2033bd93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="chrome打开的样子.png"></p><p>很明显不是翻墙的问题，于是按照提示刷新了几遍，但还是不行，看到它说浏览器的问题，于是跑去<code>FireFox</code>试了试，果然是好的</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-9eb6b9fa55d593ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="fireFox好好的"></p><p>那么问题来了…… That’s Why?? </p><p>google了下原因和解决办法</p><ul><li>原因<br><strong>事实上，它是关于SSL证书问题 - Chrome无法访问Trello CDN</strong></li><li>解决办法<br><strong>访问这个链接 <a href="https://d78fikflryjgj.cloudfront.net/test.html" target="_blank" rel="noopener">https://d78fikflryjgj.cloudfront.net/test.html</a>，这时chrome会弹出警告，选择信任该链接，然后再返回<code>Trello</code>主页即可</strong>，参考下图</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/2190281-e3c98ee8cc98c619.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="点击ADVANCED.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-62cec2b5442c97d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="点击最后一行.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-8fec78e0d4a3816c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="点击Trello.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-764800919961dcf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="成功进去了.png"></p><p>感觉好神奇的样子，我还是去看看这些都是什么吧</p><ul><li>SSL证书<blockquote><p>SSL证书通过在客户端浏览器和<a href="http://baike.baidu.com/view/460250.htm" target="_blank" rel="noopener">Web服务器</a>之间建立一条SSL安全通道（Secure socket layer(SSL)安全协议是由Netscape Communication公司设计开发。<br>简单来讲：服务器部署了<a href="http://cn.globalsign.com/" target="_blank" rel="noopener">SSL 证书</a> 后可以确保用户在浏览器上输入的机密信息和从服务器上查询的机密信息从用户电脑到服务器之间的传输链路上是高强度加密传输的，是不可能被非法篡改和窃取的。同时向网站访问者证明了服务器的真实身份，此真实身份是通过第三方权威机构 （GlobalSign） 验证的。也就是说有两大作用：数据加密和身份认证。</p></blockquote></li><li>CDN<blockquote><p>Content Delivery Network的简称，即“内容分发网络”，一般我们所说的CDN加速，一般是指<a href="http://www.xujiahua.com/tag/website-skill" target="_blank" rel="noopener">网站</a>加速或者用户下载资源加速<br>CDN基本思路就是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上<br>简单来说，就是加速，当一个网站开启了CDN加速，其给用户的感觉是访问网站速度或者下载东西的速度会明显比没有开启加速更快，变快或者下载东西变快了。</p></blockquote></li></ul><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直用的好好的&lt;code&gt;Trello&lt;/code&gt;，某天打开它却突然成了这个样子，什么鬼……&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2190281-557afbbd2033bd93.p
      
    
    </summary>
    
      <category term="工具" scheme="https://www.wdanna.com/%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 安装 mongoDB 报错</title>
    <link href="https://www.wdanna.com/Ubuntu%E5%AE%89%E8%A3%85mongoDB%E6%8A%A5%E9%94%99/"/>
    <id>https://www.wdanna.com/Ubuntu安装mongoDB报错/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、安装步骤一切ok"><a href="#一、安装步骤一切ok" class="headerlink" title="一、安装步骤一切ok"></a>一、安装步骤一切ok</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启动时 </span><br><span class="line">$ sudo service mongodb start</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#报错 </span><br><span class="line">couldn&apos;t connect to server 127.0.0.1:27017 (127.0.0.1), connection attempt failed at src/mongo/shell/mongo.js:146</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#停止时</span><br><span class="line">$ sudo service mongodb stop</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#报错 </span><br><span class="line">unknown instance</span><br></pre></td></tr></table></figure><p>搜了下有人这样解决了：</p><blockquote><ul><li>Step 1: Remove lock file.sudo rm /var/lib/mongodb/mongod.lock</li><li>Step 2: Repair mongodb. sudo mongod –repair </li><li>Step 3: start mongodb.sudo start mongodb orsudo service mongodb start</li><li>Step 4: Check status of mongodb.sudo status mongodb or sudo service mongodb status</li><li>Step 5: Start mongo console.mongo</li></ul></blockquote><p>但我也试了，却没有解决…</p><p><strong>卸载之前装的mongodb</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get purge mongodb-org</span><br><span class="line">$ sudo apt-get autoremoveRemove the old mongodb.list you created</span><br><span class="line">$ sudo rm /etc/apt/sources.list.d/mongodb.list</span><br></pre></td></tr></table></figure></p><p>准备重新安装，由失败到成功，整理了一下：</p><ul><li><p>执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mongodb-server</span><br></pre></td></tr></table></figure></li><li><p>进入目录  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>添加此句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ export PATH=/home/yhl/mongodb-linux/bin:$PATH</span><br></pre></td></tr></table></figure></li><li><p>查看版本号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongod -version</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir data</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir log</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongod --dbpath data/ --logpath log/mongodb.log -logappend --fork</span><br></pre></td></tr></table></figure><ul><li>最后将启动命令保存在start中，方便下次启动使用（亲测成功）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;mongod --dbpath data/ --logpath log/mongodb.log -logappend --fork&quot;&gt;&gt; [start.sh](http://start.sh/)</span><br></pre></td></tr></table></figure></li></ul><h3 id="二、补充一下之前遇到的问题："><a href="#二、补充一下之前遇到的问题：" class="headerlink" title="二、补充一下之前遇到的问题："></a>二、补充一下之前遇到的问题：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service mongod start</span><br><span class="line">Failed to start mongod.service: Unit mongod.service failed to load:</span><br><span class="line">No such file or directory.</span><br></pre></td></tr></table></figure><p>添加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=High-performance, schema-free document-oriented database</span><br><span class="line">Documentation=man:mongod(1)</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">User=mongodb</span><br><span class="line">Group=mongodbRuntime</span><br><span class="line">Directory=mongodPIDFile=/var/run/mongod/mongod.pid</span><br><span class="line">ExecStart=/usr/bin/mongod -f /etc/mongod.conf --pidfilepath /var/run/mongod/mongod.pid --fork</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">KillMode=mixed</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>就可以解决了。</p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、安装步骤一切ok&quot;&gt;&lt;a href=&quot;#一、安装步骤一切ok&quot; class=&quot;headerlink&quot; title=&quot;一、安装步骤一切ok&quot;&gt;&lt;/a&gt;一、安装步骤一切ok&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="Linux" scheme="https://www.wdanna.com/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>WebStorm卡的问题</title>
    <link href="https://www.wdanna.com/WebStorm%E5%8D%A1%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://www.wdanna.com/WebStorm卡的问题/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>很多项目导致WebStorm文件过于庞大，但是WebStorm里面有Excluded功能，用来将某个目录文件，设置为忽略状态，但一般不也轻易设置，比较常见的，一般是<code>node_modules</code>文件夹，解决方法如下</strong></p><ul><li><strong>推荐解决方法</strong><br>把<code>node_modules</code>加入到<code>.gitignore</code>文件中（如果你的项目是git的托管项目，则webstorm会自动把<code>.gitignore</code>里的文件设置为Excluded）</li><li><strong>如果没有使用以上方法，则这样解决</strong><br>1、删除项目下的<code>node_modules</code></li></ul><p><img src="http://upload-images.jianshu.io/upload_images/2190281-0da54de7830676b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="删除项目下面的node_modules"></p><p>2、新建一个<code>node_modules</code>空文件夹</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-433dab957b51bff5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="新建一个node_modules空文件"></p><p>3、在刚新建的<code>node_modules</code>右键点击<code>mark directory as</code>——&gt; 点击<code>Excluded</code><br>4、去<code>settings</code>下的<code>Language&amp;Frameworks</code>——&gt;<code>Javascript</code>——&gt;<code>libraries</code>——&gt;勾选<code>node_modules</code>——&gt;点击<code>Remove</code></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-fbf9396e6469b3b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="勾选node_moddules，点击Remove"></p><p>5、执行npm install，即可成功解决</p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;很多项目导致WebStorm文件过于庞大，但是WebStorm里面有Excluded功能，用来将某个目录文件，设置为忽略状态，但一般不也轻易设置，比较常见的，一般是&lt;code&gt;node_modules&lt;/code&gt;文件夹，解决方法如下&lt;/strong&gt;&lt;/p
      
    
    </summary>
    
      <category term="Web 前端" scheme="https://www.wdanna.com/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>“跟你说话能把人气死”</title>
    <link href="https://www.wdanna.com/%E2%80%9C%E8%B7%9F%E4%BD%A0%E8%AF%B4%E8%AF%9D%E8%83%BD%E6%8A%8A%E4%BA%BA%E6%B0%94%E6%AD%BB%E2%80%9D/"/>
    <id>https://www.wdanna.com/“跟你说话能把人气死”/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我很庆幸自己有生之年能看到这样一本好书，连前言和序言都是真的好看——半生不熟</p></blockquote><p>没错，它就是《关键对话》，不怕大家笑话，在这之前，我居然都不知道世上还存在一种叫 <strong>对话高手</strong> 的人。</p><p>不瞒你说，我开始看到这个字眼的时候只是一笑而过，不过读了八章下来，只想说一句，高，实在是高！</p><p>或许你会问，为什么它是好书呢，怎样才算好？</p><p><strong>我个人觉得，一本好书，它会让你感觉在跟一位慈祥的老爷爷聊天。</strong></p><p><strong>形象点来说，它不仅会告诉我们为什么人会乱发脾气，还会告诉我们经常乱发脾气这样不好，最重要的一点是它会告诉我们要怎样做，才能减少发脾气的次数，甚至能很好地控制自己不随便乱发脾气。这就是一本好书</strong></p><p>就像鸡汤类的书和文章，有没有发现它们的不同点呢？</p><p>它也会很大声的告诉你人为什么会乱发脾气，也会告诉你乱发脾气那样不好，最重要的一点，它就停在那了，然后就没有然后了。</p><p>它很大声地告诉我们什么是不好的，却不会告诉我们改怎样去做，这也是我个人不愿意经常读一些鸡汤文的原因。</p><p>好的书是实践出来的，它会告诉你改如何去做，而不是说满嘴的仁义道德批评你那样做不好。</p><p>有人形容这是一本<strong>旷世奇书</strong>，其实我更觉得它是一本真实平淡的书，它在讲述我们生活中最简单也是最复杂的东西—<strong>沟通</strong></p><blockquote><p>简单点，说话的方式简单点……</p></blockquote><p><img src="http://upload-images.jianshu.io/upload_images/2190281-b32a01c516d791e7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="对话"></p><h2 id="讲个我也经历过的故事吧"><a href="#讲个我也经历过的故事吧" class="headerlink" title="讲个我也经历过的故事吧"></a>讲个我也经历过的故事吧</h2><p>一个炎热的下午，父亲带着姐妹俩结束了在迪士尼乐园的游玩，三人急匆匆地回到了宾馆房间。因为这两个孩子喝了一大桶汽水，现在已经憋不住要上厕所了，由于房间里只有一个卫生间，姐妹俩很快就为谁先上厕所吵了起来。</p><p>两人先是大声争执,然后你推我搡，连难听的外号都叫出来了。眼见无法解决问题，她们最后向父亲求助了。</p><p>“爸爸,是我先到的！”<br>“可是我比你还急！”<br>“你怎么知道我不急？你又不是我的身体。<br>“我今天早上出门时都没上厕所！”“你太自私了！”</p><p>父亲提出了一个方案：“姑娘们，这个问题你们要自己去解决。你们就待在卫生间里商量吧，早晚会决定谁先用谁后用。不过我有一条规定—不许打架。”</p><p>在两个烦躁的孩子进行一系列对话时，父亲在盯着自己的手表，他想知道这个问题要花多长时间才能解决。</p><p>时间一点点地过去了，卫生间里不时传来几句讽刺挖苦的话。大约过了25钟之后，父亲终于听到了马桶冲水声，然后从卫生间里走出了一个孩子。一分钟后，冲水声再次响起，她的姐姐也走了出来。</p><p>这时，父亲笑眯眯地问道：“你们知不知道,在你们争吵不休的这段时间里，你们每个人可以上多少次厕所？”两个孩子可没心思想这个，父亲接着问道：“为什么你们用了这么久的时间才用上厕所呢？”</p><p>“那是因为她总是很自私！”<br>“瞎说，她本来可以等我先上的，可是偏偏不让我，还对我大呼小叫的，她从来都是这样！”</p><p><strong>两个孩子都说最想做的事情是上厕所，但她们的做法却完全相反,让这个目标变得遥不可及。</strong></p><p>不知道你有没有经历过呢，反正我和弟弟在家的时候也是那样的。</p><h2 id="遇到过的或者即将会遇到的"><a href="#遇到过的或者即将会遇到的" class="headerlink" title="遇到过的或者即将会遇到的"></a>遇到过的或者即将会遇到的</h2><p>除过上面故事中的情景外，生活中我们也会遇到或者即将会遇到很多类似于这样的情况。</p><ul><li>比如你正在和老板讨论升迁的问题，她认为你还没准备好，而你却觉得自己早该被提拔了</li><li>比如当你的老板做了一些不正确的裁决时，你纠结着要不要及时指出那些他不对的做法</li><li>朋友借了你数目不算少的钱，你特别想对朋友说让他还钱的时候</li><li>跟你一起干活的同事太懒了，你很想告诉他但又担心影响你们的关系</li><li>作为父母，你要处理青春期的叛逆儿女的一些很棘手的问题</li><li>你想提醒室友注意下个人卫生的问题但又怕她会敏感</li></ul><h2 id="该进入主题了"><a href="#该进入主题了" class="headerlink" title="该进入主题了"></a>该进入主题了</h2><p><img src="http://upload-images.jianshu.io/upload_images/2190281-6d6d6daceec33e86.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="关键对话"></p><p>有没有注意到这些情况都有一些共同的特点</p><ul><li>两人或多人之间的一种讨论</li><li>对话双方的观点有很大差距</li><li>对话可能存在很高的风险</li><li>对话双方的情绪非常激烈</li></ul><p>我们把有这些特点的对话就叫做关键对话，而不同的人处理在同样的关键对话的时候也会有很多不同的情况，但不可否认的是，我现在是一般人，来看看书中提到的一般人的反应吧。</p><h2 id="“跟你说话能把人气死”"><a href="#“跟你说话能把人气死”" class="headerlink" title="“跟你说话能把人气死”"></a>“跟你说话能把人气死”</h2><blockquote><p>我们的看法往往大相径庭<br>我有一套观点，你也有一套观点。<br>我有我的经历，你也有你的经历。</p></blockquote><ul><li>我们会逃避关键对话</li><li>我们或许会敢于面对，但往往处理不当</li><li>我们或许会敢于面对，而且处理得当</li></ul><p>我想，大多数人应该和我一样，前两种情况居多，可是为什么呢？作者是这样解释的</p><blockquote><p><strong>这是人类的自然基因使然</strong></p></blockquote><blockquote><p>也就是说，造物主在创造我们时，一时疏忽犯了一个小错误。当普通对话变成关键对话时我们经常会犯错，是因为我们的情绪还没有准备好进行有效交流。</p></blockquote><blockquote><p>经过无数代人遗传下来的基因影响，每当面对关键对话时我们便会下意识地采取人类面对危险时最原始的应对方式——暴力对抗或转身而逃，而不是采用机智的说服和友善的关注来解决问题</p></blockquote><p>例如，对于一件和你有莫大关系的事件，有人表达了一些和你不同的看法，你气得连脖子上的汗毛都跳了起来。</p><p>汗毛还好办，不幸的是你体内的反应更为猛烈。在靠近肾脏上方的位置，有两个很小的器官开始活跃，向血管里大量释放肾上腺素——很快，你就像失控的野马一样无法驯服了。</p><p><strong>这可不是你的错，你也不想这样做，但那个可恶的肾上腺在发作，你只能眼睁睁地看着它为所欲为。</strong></p><p>这还没完，受到这种激素的影响，你的大脑开始调整任务级别，把血液从其他器官“调离”，充斥到你的四肢，以便做好战斗或逃跑的准备。</p><p>糟糕的是，当你的臂部和腿部因为充血而高度紧张时，脑部负责思维的部分却因为缺血而无法正常思考。换句话说，当面对充满挑战的关键对话时，你的智力水平跟一只恒河猴差不了多少。你的身体准备应对的是一只剑齿虎的攻击，而不是什么老板、邻居或老公的批评指责。</p><blockquote><p>我们选择的应对关键对话的策略恰恰是最无法帮助我们实现目的的策略。我们成了自己最可怕的敌人，对这一点却又浑然未觉。</p></blockquote><p>其实生活中每天都上演着关键对话，说话的方式很重要，然而怎么重要。怎么改进，却没有多少人去想，用刻意练习的方法去学习关键对话这门课。</p><p><strong>想知道对话高手是如何应对和处理的，诸君请听下回分解</strong></p><p><strong>我是半生不熟 喜欢照自己的怪念头行事</strong><br><strong>喜欢一切意外 想把生活过成诗的样子</strong><br><strong>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我很庆幸自己有生之年能看到这样一本好书，连前言和序言都是真的好看——半生不熟&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;没错，它就是《关键对话》，不怕大家笑话，在这之前，我居然都不知道世上还存在一种叫 &lt;strong&gt;对话高手&lt;/strong&gt; 的
      
    
    </summary>
    
      <category term="我读的书并不多" scheme="https://www.wdanna.com/%E6%88%91%E8%AF%BB%E7%9A%84%E4%B9%A6%E5%B9%B6%E4%B8%8D%E5%A4%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>《假面饭店》|| 我认识了东野圭吾</title>
    <link href="https://www.wdanna.com/%E3%80%8A%E5%81%87%E9%9D%A2%E9%A5%AD%E5%BA%97%E3%80%8B%7C%7C%20%E6%88%91%E8%AE%A4%E8%AF%86%E4%BA%86%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/"/>
    <id>https://www.wdanna.com/《假面饭店》|| 我认识了东野圭吾/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>有一天在某群里看到朋友赠送一本书—《假面饭店》</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-2c02197177d841ab.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一开始被封皮吸引了眼球"></p><p>每次看到这种极具诡异气氛的图，就会有强烈的好奇心，再加上<code>难解的连环杀人案即将在此展开</code>的字眼，更有一种强烈想读的欲望，于是几乎是一口气看完的</p><h4 id="假面"><a href="#假面" class="headerlink" title="假面"></a>假面</h4><p>书里描述了东京大饭店形形色色的人物登场谢幕的百态，假面饭店，假面人生。</p><p>回到现实，或许每个人都有很多假面，面对陌生人，面对朋友，甚至有时候面对内心时又何尝不是带着一张张不同的面具</p><h4 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h4><p>情节设计的很独特，细节描写很细腻，读到中间的时候，自己猜测过的凶手至少有两个人，甚至都怀疑到了女主，让人细思极恐，真是佩服作者细腻的构思。</p><p>同样，结局，也是意料之外，情理之中。不过有些细节也是发人深省的。</p><ul><li>日本在饭店（酒店）管理方面是很有秩序很严格的，饭店从业人员对服务的追求真的让我感到震撼，饭店经理把责任哪怕是不良的后果都打算自己承受，保护员工，这种精神令人佩服</li><li>同样，一个警察不管多么想立功，但在集体利益之下，也是以大局为重，毫不动摇，对正义的坚守</li><li>既来之则安之，工作需要的，你都需鞠躬尽瘁，我理解了服务行业的心酸与责任很多事情，我们都无法预料，一定要懂得原谅别人，也宽容自己</li></ul><h4 id="书里的一些小故事"><a href="#书里的一些小故事" class="headerlink" title="书里的一些小故事"></a>书里的一些小故事</h4><blockquote><p>“与此同时我也意识到一件事 ，自己想事情还是太天真了，单凭客人上次偷走了浴袍就推断他这次会做同样的事情，实在是太单纯了，我应该考虑的更周全”</p></blockquote><p>有时候当局者迷，旁观者清，一个饭店服务人员对一次客人偷浴袍的看法，警察就不一样，就像你一条路可能走过很多次，但都不一样，因为没有一次一样的时间</p><blockquote><p>“妥善处理这些事情正是我们的工作职责，如果所有的客人都既有教养，又理智，那就没有比饭店服务人员更轻松的工作了”</p></blockquote><p>是的，每一个岗位上的人都有自己的责任和负责的事情，没有理由去要求不能发生没有可能的事情，做好它们，就是自己的职责</p><blockquote><p>这个资料本来是绝对不能给本部门以外的人看的，这个是从东京都内各大饭店收集整理的霸王住客的资料汇编，霸王住客的饭店发现被骗后，马上就公布住客的资料、性别、推理年龄、长相和身体特征、使用了什么化名、登记了哪里的住址等等，会可能地公开所有的信息</p></blockquote><p>今天才知道，原来饭店中间还有这样一种信息共享，不知道中国是不是这样，毕竟同行之间本来就是竞争的关系</p><blockquote><p>对于一般的民众而言，只要享受过一次特殊的待遇，就会妄想每次都有同样的待遇，一旦没有了就会新生抱怨</p></blockquote><p>的确是这样啊，不过我想这是人的本性吧</p><blockquote><p>“我们衷心地希望客人们都能幸福，但是也很清楚自己的能力有限，正因为如此，我们才对每一位即将离开的客人说：“请您走好””</p></blockquote><p>平时根本不在意这些“客套”的话，原来背后都是有原因的</p><blockquote><p>“也就是说，社会上大多数人都觉得女性扮演的角色就是男性的助手，对吗？尚美感觉到自己的声调提高了。”</p></blockquote><p>现在的女性受到的待遇尤其是在家庭中已经提高了很多，但是在工作中，女性的歧视还是蛮严重的，记得在巴西里约热内卢奥运会的开幕式上，白岩松老师在解说时提到，希望有朝一日中国代表团的旗手可以是一位女性运动员，要想实现真正的无性别歧视，还有很多路要走</p><h4 id="东野圭吾"><a href="#东野圭吾" class="headerlink" title="东野圭吾"></a>东野圭吾</h4><p><img src="http://upload-images.jianshu.io/upload_images/2190281-68ce75039989d7c1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="东野圭吾"></p><p>东野圭吾（Higashino Keigo），日本著名推理小说家，1958年2月4日出生于日本大阪。毕业于大阪府立大学电气工学专业，之后在公司担任生产技术工程师，并开始推理小说的创作，代表作有《<a href="http://baike.baidu.com/view/3046629.htm" target="_blank" rel="noopener">放学后</a>》<a href="http://baike.baidu.com/view/903888.htm" target="_blank" rel="noopener">《秘密》</a>《<a href="http://baike.baidu.com/view/860970.htm" target="_blank" rel="noopener">白夜行</a>》《<a href="http://baike.baidu.com/view/5732306.htm" target="_blank" rel="noopener">以眨眼干杯</a>》《神探伽利略》《<a href="http://baike.baidu.com/view/1911112.htm" target="_blank" rel="noopener">嫌疑人X的献身</a>》《<a href="http://baike.baidu.com/subview/984184/13235825.htm" target="_blank" rel="noopener">预知梦</a>》《<a href="http://baike.baidu.com/subview/363279/20043190.htm" target="_blank" rel="noopener">湖畔</a>》等</p><p><strong>东野圭吾作品第一定律——所有与滑雪有关的作品，全部都是骗差旅费的，不要看</strong></p><p>他大学时主修电气工程学，担任工程师数年之久，这让他的不少作品中有着浓厚的理工科背景，谈到东野的写作风格，并非传统的本格推理，又难以概括为社会派，当年靠“校园青春推理”成名，如今他又大胆突破日式推理小说框架，融入了科幻、社会等众多元素，作品涉猎面极广，风格差异之大在日本推理届独树一帜：挖掘人性之丑恶的白夜行，深入探讨同性恋的单恋，具有浓厚幻想色彩的秘密，对推理小说界极尽嘲讽的黑笑/毒笑小说，用物理学探案的《侦探伽利略》等等——东野圭吾成功开拓了日本推理小说的疆域</p><p>-东野的文字堪称“语到极致是平常”，朴实无华，平易近人，很少故弄玄虚，卖弄文笔，他的笔下没有福尔摩斯或波洛，有的只是真实、普通的人，他不爱写固定的侦探，每部小说的主角几乎都不同，少数几个多次出场的人物，加贺是警察，伽利略则是物理学教授。虽然风格平实，但对人性入木三分的刻画以及东野特有的大逆转风格结局，令人读来欲罢不能——东野用实际行动践行了松本清张“文学既暴露”的主张，不仅具有社会责任感，而且对敏感问题敢于讲真话</p><p>有人这样评价他—<strong>推理小说，不仅仅是推理，哪怕是没有一丝阳光的黑夜，东野圭吾依然有办法带领你前行</strong></p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有一天在某群里看到朋友赠送一本书—《假面饭店》&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2190281-2c02197177d841ab.jpg?imageMogr2/auto-orien
      
    
    </summary>
    
      <category term="我读的书并不多" scheme="https://www.wdanna.com/%E6%88%91%E8%AF%BB%E7%9A%84%E4%B9%A6%E5%B9%B6%E4%B8%8D%E5%A4%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>《秘密》里的秘密究竟是什么</title>
    <link href="https://www.wdanna.com/%E3%80%8A%E7%A7%98%E5%AF%86%E3%80%8B%E9%87%8C%E7%9A%84%E7%A7%98%E5%AF%86%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%BB%80%E4%B9%88/"/>
    <id>https://www.wdanna.com/《秘密》里的秘密究竟是什么/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>有段时间不止一次地听到别人在讨论《秘密》这本书，哦，对了，不是东野圭吾那本，是这本。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-9ac7a94b8a797c04.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="或许你也没有听过朗达·拜恩"><a href="#或许你也没有听过朗达·拜恩" class="headerlink" title="或许你也没有听过朗达·拜恩"></a>或许你也没有听过朗达·拜恩</h2><p>其实一开始我也不认识她，甚至不知道这个她是位女性，开始了解是看到这样介绍她的</p><blockquote><p>她是一位澳大利亚电视工作者，她在人生跌至谷底、生活即将崩溃的时候，意外发现了隐藏在百年古书中的秘密并成功走出来的奇迹，那些秘密亘古以来存在于各种口述的历史、文学、宗教与哲学之中，但是她想让更多的人知道这个秘密。</p></blockquote><p>后来她凝聚了一个超强的团队，从作家、神职人员、教师、影像工作者、设计以及出版等相关人员，把这个秘密推广到了全世界，带给全球逾千万人喜悦的转变，并因此入选《时代周刊》2007年全球最有影响力的100人之一。</p><h2 id="满满的好奇"><a href="#满满的好奇" class="headerlink" title="满满的好奇"></a>满满的好奇</h2><p>看之前，我还幻想着这本书肯定又会是通过一个古老又神秘的故事告诉我们一些什么道理，因为古典的封面，迷幻的设计和一页页充斥着神秘色彩的泛着陈旧的黄色的纸张。</p><p>看到这一句，满满的好奇心，已经迫不及待想读了。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-6455765f289f5bab.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>#想到我小时候天天念叨着想飞<br>全书都在围绕一个叫“吸引力法则”的法则在讲一些人的真实故事。</p><blockquote><p>书里说我们只要将我们所希望的得到的东西，在思想上转化成我们已拥有的状态，那么就一定可以拥有它，甚至你原来觉得不可能的梦想都是可以实现的。</p><p>“<strong>你想什么就要去关注什么，然后下意识采取相应行动，行动带来改变，然后你就会慢慢靠近目标，就好像这些后续的事情都是被你吸引过来。</strong>”</p></blockquote><p>记得看到一半的时候，是非常怀疑的，因为整篇文字都觉得很浮夸，中间因为觉得特别荒诞，想到了小的时候……</p><p>我是个爱幻想的女孩，打小就开始，到现在也经常会做各种各样奇怪的梦，一直觉得也跟这个有关。</p><p>记得上小学的时候经常看各种神话剧，很羡慕那些会在天上飞来飞去的神仙们，于是一有空就趴在桌子上想着自己怎么能飞起来。</p><p>想啊想，真的好几次在梦里都飞了起来，那时候开心极了，有次眨巴眨巴眼睛，开心地告诉妈妈说：“说不定世界上真的有神仙呢，我好几次都梦到自己飞起来了，飞的可高了 ”，妈妈呢，一点也不惊讶，摸着我的头说：“这梦是好梦呀，说明你要长个子了，不过别傻了，哪有什么神仙……”，完全不理会我说的话。</p><p>虽然挺不开心的，但每次一想到只要白天想着自己能飞，相信这世界是有神仙的，晚上就可以在梦里飞起来，也是开心了好一段时间。</p><blockquote><p>可是，梦做多了，是会出现幻觉的，更别说同样的梦连着做了好几次，那是种可以让一个小孩觉得真实的一种美好的错觉。</p></blockquote><p><img src="http://upload-images.jianshu.io/upload_images/2190281-e72f1ff74fee1255.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>有段时间我真的觉得自己是能飞起来的，我想着只要我的双脚跑的足够快，最终总是会踩在空中像神仙一样飞起来的。</p><p>于是我傻傻地尝试了很多遍，但每次都是以受伤的结局告终，也难过的好久。</p><h2 id="我肯定能飞起来的"><a href="#我肯定能飞起来的" class="headerlink" title="我肯定能飞起来的"></a>我肯定能飞起来的</h2><p>有次我在补充了很多能量（其实是吃了很多很多的饭），做了充足的准备后开始狂奔，想着跑着跑着，双脚就一定可以跑在空中，然后就像梦里一样飞起来。</p><p>后来啊，不记得是不是真的因为太快了，最后连怎么跑都不会了，直接脸朝地重重摔在了地上，哭的起都起不来，还让路人送到了医院。</p><h2 id="这次总该能飞起来了吧"><a href="#这次总该能飞起来了吧" class="headerlink" title="这次总该能飞起来了吧"></a>这次总该能飞起来了吧</h2><p>但偏偏我又是个比较固执的孩子，我不信，我不信我飞不起来，肯定是方式不对。</p><p>有一次下午趁妈妈不在，拉上我弟弟去楼下的一个三米多高的高台，准备往下跳，我对弟弟说：“一会儿等我跳出去的时候，我就要开始飞了，你看着我的姿势对不对，就跟电视里面的一样，我要是飞起来了，你也就一起跳，不然我飞远了就不带你了…” 那时候弟弟还特别听话，很认真的点头说着知道了。</p><p>然后我就开始准备跳了，那时候，除了一心想飞起来，什么都没想，也忘了上次被摔得惨状，我只记得我的双脚还没来得及在空中做奔跑助力的动作，瞬间就到地上了，这次是膝盖着地的，比上次还重，仿佛全身的重量都在膝盖的那两个骨头上，只记得那会我楞了一下，哇的一声就哭了，根本动弹不了，弟弟呢，就使劲在旁边笑，直到我边哭边喊着流血了，流血了……</p><p>你想问后来呢，细节就不描述了，但接下来的两个礼拜妈妈送我上学放学是真的。</p><p>现在想想还真的是小时候胆大，什么都不怕，让我现在去院子里那快三米高的坎往下跳，那是真心不敢了，光是看着就觉得害怕。</p><p>如果按书中的吸引力法则，这样看来，那是不是我早就应该飞了起来，并且现在都不知道飞到哪里了呢？毕竟那时候我是日思夜想心心念念着的啊，吸引力法则都没起一点作用?</p><h2 id="但看到最后的时候"><a href="#但看到最后的时候" class="headerlink" title="但看到最后的时候"></a>但看到最后的时候</h2><p>很奇怪，看到最后的时候，情绪竟然平和了很多，只是觉得完了吗？居然就这么完了？<br>还记得我曾经看完鬼怪后写的一篇关于奇迹的文章 <a href="https://www.jianshu.com/p/e82ba777552a" target="_blank" rel="noopener">什么让你相信这世上有奇迹</a>，</p><p>后来，我有认真地回忆以前发生的跟天天有关的一件一件事情的时候，好像真有那么点道理，这里我不想详细描述了，因为都只是自己的经历，也曾喜欢给别人讲，但大家都说只是巧合，到现在只是给喜欢听的人讲罢了 。</p><p>但我还是那句话，我相信，而且会一直信。<br><img src="http://upload-images.jianshu.io/upload_images/2190281-8070ec463c41559d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="最后我想说"><a href="#最后我想说" class="headerlink" title="最后我想说"></a>最后我想说</h2><p>其实我也知道很多物理知识很好的人或者唯物主义者甚至理性思维的人稍做研究就可以推翻书中的观点，况且，说这本书是无稽之谈的也大有人在。</p><p>但是，结合自己的经历来看，我觉得它是秘密又不算是秘密，因为很多人知道但是是不信的，就像我曾经把自己经历的事情告诉过很多人，她们都说是巧合一样。</p><blockquote><p>当有人说，我看了秘密后，整天想着要赚一百万，怎么一直没实现，他的内心还是急功近利，还是浮躁的，他很难去赚到这一百万，真正看懂秘密的人，他们会用感恩和爱去看待他们现在的生活，并不断追求更高的目标，无论有没有赚到这一百万，他们都会很快乐，拥有内心的平和，就是拥有一切</p></blockquote><p>《秘密》中的确是有秘密的，并且每个人领悟到的秘密都是独一无二的，既然是秘密，那么说出来了就别怕没有人相信，自己信就好 了，你也可以说那些都是无稽之谈，你也可以说我相信里面的每一个故事，因为发生过类似的事情，就在自己身上，但请记住，既然是讲给了别人的秘密，就要做好不被别人相信的准备。</p><p>但我想说的是，如果是真的领悟到了其中的秘密，就不应该拿科学和唯物主义去谈论它，就像神话传说，单单从科学的角度来看，有些根据就是不可能发生甚至不可能存在的事，为什么世世代代还会有人相信，会有人尊重。</p><p>因为那些东西是从一开始的存在就带着“不能用科学评论”的副标题的。</p><p><strong>世间有很多道理本来就是不符合科学道理的，就像整本书开头的寄语——“愿这秘密带给你一生爱和喜悦”。</strong></p><p><strong>修炼内心，保持一个平和的心态，用感恩和爱去善待这个世界我想这才是作者想告诉我们的秘密。</strong></p><p>看到的一个再赞同不过的说法</p><blockquote><p>当某种思想只有一个人在倡导的时候，我们不应该立即否定，但是我们可以怀疑。可是，当完全不相及的人都在倡导的时候，而且还都是牛人，我们就应该去尝试，为什么不去试试呢?</p></blockquote><p><img src="http://upload-images.jianshu.io/upload_images/2190281-080e776c9e3a6931.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>对了，若有兴趣，这里是<a href="https://www.bilibili.com/video/av7686600/" target="_blank" rel="noopener">《秘密》的纪录片</a>。</p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有段时间不止一次地听到别人在讨论《秘密》这本书，哦，对了，不是东野圭吾那本，是这本。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2190281-9ac7a94b8a797c04.jpg?imageM
      
    
    </summary>
    
      <category term="我读的书并不多" scheme="https://www.wdanna.com/%E6%88%91%E8%AF%BB%E7%9A%84%E4%B9%A6%E5%B9%B6%E4%B8%8D%E5%A4%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>一个从自动化走向程序员的女生</title>
    <link href="https://www.wdanna.com/%E4%B8%80%E4%B8%AA%E4%BB%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E8%B5%B0%E5%90%91%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%A5%B3%E7%94%9F/"/>
    <id>https://www.wdanna.com/一个从自动化走向程序员的女生/</id>
    <published>2018-10-14T12:46:44.000Z</published>
    <updated>2018-10-14T12:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="三年前"><a href="#三年前" class="headerlink" title="三年前"></a><strong>三年前</strong></h3><p>记得填高考志愿的那天，我们一家人信心满满，第一志愿报了西安邮电大学的通信工程专业，觉得肯定能录上，没一点问题。<br>然而等待的结果却是差了四分，与通信无缘，当时的我伤心极了…</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-5f40ae6968c30186.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="就是这么难受"></p><p>“没事，还有第二志愿呢”，家里人劝着我，带着些许沮丧… 看看第二志愿吧—<strong>自动化</strong>，当时的我就一点也想不起来怎么填的第二志愿了，印象中似乎只考虑了没有半分钟的时间，就那么顺其自然，那会儿家里人为了劝我，又开始说自动化多么好，爷爷这样说，现在的电梯，盖房子，甚至说到机器人，不都是自动化嘛…<br>我笑了，好像是啊，那时候的我又那么简单地高兴了起来，激动着期待着…</p><h3 id="三年多的大学生活"><a href="#三年多的大学生活" class="headerlink" title="三年多的大学生活"></a>三年多的大学生活</h3><p>…此处省却几千字…</p><h3 id="现在的我大四"><a href="#现在的我大四" class="headerlink" title="现在的我大四"></a><strong>现在的我大四</strong></h3><p>就说说我这三年多跟自动化的那些事儿吧</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-080890a4d379fb12.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="学好一门自动化"></p><p>眼花缭乱了吧，但是不可否认的是，到现在为止，我都觉得它是高端的厉害的，不撒谎。如果学好它的人，前途是不可估量的，因为马上到来的工业革命4.0。我们专业也有很厉害的学长学姐，然而导致我没有坚持学下去的原因有以下几点：</p><ul><li><p><strong>课程</strong>  自动化的课上着上着，我发现很多已经过时很久的课程并没有更新，很多东西，我心里在抵触，明明知道这些技术很老了，不用了，为什么不更新课本，学习的知识感觉跟不上上发展的步伐，我也跟老师聊过，几乎都是被这句话结束了谈话：没办法，现在的教育制度就是这样…想改变，难…<br>还有很重要的一点原因，硬件的知识，完全靠动手实践，课本上学的永远只是皮毛，学好那些概念没有半点用，一定要实践，实践才是检验真理地唯一标准，然而事实是，上理论课的时间却远远超过了实验课的时间。</p></li><li><p><strong>兴趣</strong>  说真的，学了这么久的自动化，我有过很多次感兴趣的地方，除了大四的，每年的课设我会很认真去做，我觉得那才是最有意思的时候，我也曾经深入地去学习过我感兴趣的东西，但由于诸多的无奈和条件限制，我的兴趣并没有继续燃烧下去，也可能因为没有加入与硬件相关的实验室吧。</p></li><li><strong>考试</strong>  当前的应试教育制度下，摸着良心说，我考试前就一个目的—期末不挂科，其实在很多只看成绩的人眼里，可能我是个学霸，但其实并不是。我有几乎百分之八十的课平时一点都没有听，跟很多人一样，上课睡过觉，带着耳机听歌，玩手机，跟同桌说悄悄话…<br>不是我非要这样，只是我的心里总有个声音告诉我，考试过了就行了，平时听了，考试照样忘，没用，慢慢地，就成了一种习惯。作业能抄就不会动手算，实验报告能复制粘贴就不打字，但有一点，我喜欢的课或者感兴趣的课，绝对自己做！</li></ul><p>就这样，我每年大半学期的课就是这样过来的，但是，目标终究是要完成的，我不能对不起爸妈交的学费，所以我对自己有责任，到期末考试的时候，也就是我每学期最认真的时候，曾经有一门特别难的课，剩一天就考试，然而我什么都不会做，但是我知道我必须过，于是在实验室熬了一夜通宵，就复习那一门课，最终还得了九十多，说真的，上天很眷顾我，还让我拿了奖学金，虽然不是最高的，但看看班里的学霸们的付出，我知足了。</p><h3 id="我接触了软件"><a href="#我接触了软件" class="headerlink" title="我接触了软件"></a>我接触了软件</h3><p>初次接触，是舍友要报 C 语言班，当时听学姐说这门课不好过，女生的话最好报个班补一补，我当时就稀里糊涂跟着去了，开始的时候，我认真地像只小兔子 ，班里人也特别多，每天早早去占座，认真记笔记，很喜欢看那些计算机上飞舞地字母，老师打字的速度飞快，总能做出很神奇的东西，当时就一个感觉—好酷啊！</p><p>然后没过多久，就连上课都是断断续续的去（因为在校外的原因），而且心里一直有这么个想法—已经比学校课本上教的知识多很多了，就不用学那么多了，反正考试肯定能过了，就这样学了一学期，但是还好，我的兴趣跟好奇还在。</p><p>后来，听学长学姐聊起找工作，说每年硬件招人的公司百分之二十左右，而且性别歧视还特别严重，软件就好多了，我心想那我是不是要走软件呢，但我又什么都不会，到期末的时候，补课那边又说学Java好，好找工作，那时还是懵懵懂懂就跟同学去学了，当时还有一个很重要的原因就是那次报的同学比学C语言的时候都多，我就更想跟着去了。人嘛，就是喜欢伴儿多，然而现在回想上了一学期多的Java跟学C语言后期几乎是一样的状态，甚至远远没有那时候好，所以到现在Java的东西忘的几乎差不多了。</p><p>但是很重要的一点，在教我的老师身上，我学到了很多很多，也包括生活上的。我看到了跟大学老师不一样的老师，也学到了很多有趣的学习方法，看到了很多比我优秀的同学，也结识了很多好朋友，我发现比起硬件，我好像更喜欢这个酷炫的计算机，时不时地还可以找帅哥解决问题，别人问的时候，还能装装逼，虽然知识没学到多少，但至少我觉得没有虚度光阴，当别人在床上追剧的时候，我爬起来去上课。</p><p>那时候的我并没有定义自己为程序员，我知道我还不算。</p><p>大三开始后，我就正式进入了自学阶段，这次，我们都散了，大家考研的去考研了，继续学硬件的也走了，但是我不想放弃，还好，还有一个可爱的女生陪着我，我真的很感谢她，在她身上我也学到了很多，我们一起开始自学，这时候我们共同的目标是找一份软件方面的工作。</p><p>这期间很辛苦，但很充实，电脑很重，书包很大，不能像别的女生那样背个小巧玲珑地书包，看起来那么好看，记得有次我们班一个男生帮我拿书包，吓了一大跳，说“哇，你书包装的什么啊 ？这么沉，这是女生的书包吗”，我笑了笑，回了句：“你的电脑不重啊… ”，就这样有空就去图书馆看书，写代码，那时候才开始意识到动手敲代码的重要性，很兴幸那时候在同学的介绍下自己学习了 Javaweb 的一些东西和 mysql，从那时候也意识到了自学的重要性，在这里，也感谢图书馆五楼指导过我们的老师和学长们。</p><h3 id="故事这才正式开始"><a href="#故事这才正式开始" class="headerlink" title="故事这才正式开始"></a>故事这才正式开始</h3><p><img src="http://upload-images.jianshu.io/upload_images/2190281-39cf4bf9df1a1741.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="神秘而伟大程序员"></p><p>直到有一天，我参加了一个计算机学院实验室纳新的宣讲会(我们学校分西区和东区，中间隔了一条马路，一个天桥，计算机院在东区，我们在西区)这也是一个不能很顺利学习计算机的原因，离计算机学院太远，很多消息不知道，也很少接触计算机专业的同学，有问题也不知道找谁，就自己死磕着搜。不怕被笑话，那时候的我用的一直是百度。</p><p>还记得宣讲会那晚，我们过去的有点晚，满满一大教室的人，教室布置地格外漂亮，我们是站着听宣讲会的，我还清楚的记得，当时所有座位上的同学每人一朵鲜花和一个杯子，好羡慕，那时候我心里想，这实验室真有钱，完了之后才知道那是一个校企合作创办的实验室，也是跟计算机院合作的，但让我印象最深地他们宣讲会海报的一句话—<strong>谁说女子不如男</strong>，还有一句是站在台上宣讲的老师说的一句话，<strong>我们实验室只收女生，我们很欢迎非计算机学院的同学过来学习</strong>，说实话那晚回去，我没有记住公司的名字，没有记得那朵鲜花和杯子，但这几句话深深地烙在了我的心里，我心想一定要进这个实验室！</p><p>很幸运，我和我同学都通过了笔试筛选，当然也很用心地去做了那份作业，当收到短信的时候我们开心极了，仿佛吃到了世界上最甜的糖果一样，我们很认真地商量着进去以后要怎么努力，怎么认真学习。</p><h3 id="进了实验室之后"><a href="#进了实验室之后" class="headerlink" title="进了实验室之后"></a>进了实验室之后</h3><p><img src="http://upload-images.jianshu.io/upload_images/2190281-1bceaa3ade91764a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="新装修的实验室"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-e92619e45a880460.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="各种果汁饮料"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-51aba2ec6ceb7bcd.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="还有便利贴"></p><p>不说这里的环境是多么的好，多么地温馨，多么的高调奢华，就单单资源，我就很满意了，至少我不用再因为有问题不知道去找谁而烦恼了，我可以这么近地接触计算机专业的同学，是一件多么开心地事，以前特别羡慕她们平时上课学的计算机，完了在实验室还学计算机，宿舍还离的那么近，我心里不知多羡慕，但同时我也感谢自动化，正是因为自己是非计算机专业的学生，我也有更加努力的动力和决心，既要通过自动化的考试，平时还要统筹好时间来东区学习，我很庆幸，我们两互相鼓励着坚持了下来。</p><p>在实验室的日子，是我大学最最有意义的日子，这时的我才慢慢开始定义自己—真正的程序员<br>我很庆幸我认识了一群志同道合的小伙伴，我们不同年级，不同专业，却聊着同样的话题，这种感觉真好！</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-bdd638a11acece1a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="猿生态"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-e31184b4f2743771.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="FCC"></p><p>来到这里，我真正开始使用 google，我学会了使用 Linux，学会了使用 Git，学会了分享，学习了敏捷开发，学习了 TDD，学习了重构，学会了结对编程，这些都是我没有听过的东西，也感受到了使用快捷键的妙处，练习好了打字，认识了很多学计算机的朋友，参加了很多社区活动，养成了很多好的习惯，看到了许多一个有情怀的程序员该有的东西。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-32054e08ad517cc9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="最可爱的人"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-6b9099b79c204dc0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="改我们的作业到深夜"></p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-aeb6b41d1c9a8380.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="与大师聊聊人生与学习"></p><p>我很庆幸这里的老师有着跟大学老师不一样的讲课方式，他们像讲故事一样给我们讲述着计算机的知识，他们像哥哥一样给我们传授着他们的学习经验和学习方法，他们一直教导我们，不要拘泥于学到了什么知识，而是要学会学习方法，语言都是想通的，而知识永远也写不完。他们是TW最可爱的咨询师，也是最可敬的老师，在这里我想对他们说，你们很棒，我们会更加努力让你们觉得做的一切都值得的，即使这个社会有很多反对的声音，但谢谢你们，相信女生！是你们，改变了我们很多。</p><p>我很庆幸我知道了一个很伟大的软件公司，她是软件领域独树一帜的公司，她追求软件卓越，是敏捷开发的提出和倡导者，她要打破男女不平等的规则，她为社会公益和社会公平做着杰出地贡献，她哺育着的程序猿们有着对技术的狂热，有着不一样的情怀，有人说她是一股清流，包围着那里的每一个人，鼓舞着每个程序员的心，在那里工作的人没有一个说她坏话，她就是<strong>ThoughtWorks</strong>。</p><p>从那时候起，我喜欢上了她，喜欢地一发不可收拾。</p><p>教我们的老师（TW的咨询师）总是说：“你们以后找工作，范围要广，不要一下子就把目标定在TW(潜台词，目标太高)，要找适合自己的工作好好努力，我们会尽全力讲给你们学习的方法，但是学习终究靠自己”</p><p>很神奇也很幸运的是，我下周一就要去签offer了。</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-a4d428ac15ac7c41.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="面试那天B组的六个小伙伴"></p><p>总以为那天面试是最后一次去公司了，记得当时看到面试通过短信的我怎么也不敢相信我居然过了面试，真的过了，因为觉得面试那天表现的并不是很好，还有很多研究生，毕竟是全球排前十的“面试最难”公司。后来得知实验室只过了四个人的时候，只记得自己激动地都快要哭了，瞬间觉得一切都值了，我真的进了我最最喜欢的公司！附上 <a href="http://blog.csdn.net/bsbsdxbd/article/details/52538503" target="_blank" rel="noopener">[面经]</a>。<br>回想我走过的路，很坎坷，几经周折，记得有次看到同学发的朋友圈调侃，Java 从入门到放弃，Javascript 从入门到跑路…  当然，我也想到过要放弃，但是也只是想想而已，因为这个梦承载了太多太多（这里包括我的家人），这也是我选择的路，我怎样都得走完，我得有个对得起它的结局！</p><p><img src="http://upload-images.jianshu.io/upload_images/2190281-60b101b079d1d573.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我们睡觉的地方"></p><p>记得很多次一个人晚上从天桥回宿舍的时候，都会问自己 为什么要这么累，我笑笑，我喜欢啊，是的，现在的我才是真的喜欢，我是我们宿舍睡的最晚的人，大三的一年里，我睡觉前的一件事几乎都是关电脑，印象最深的是刚开学前几周做简历找工作的时候，每天熬夜到很晚复习简历上的知识，后来晚上甚至都是在实验室的沙发上睡觉的，开始有东区的同学陪我，但后来几次都是我一个人，有人问我害怕吗？怎么会不害怕，我甚至连灯都不敢关，可是我告诉自己，这点苦都吃不了，怎么找工作，还记得做TW第一轮 homework 的时候五个人在实验室熬通宵，沙发都是轮换着睡的，面试的前一天晚上背演讲稿背到了晚上三点多，本来的却应该早睡的，但是没办法，通知的晚了点，自己也没准备好，即使开始报的希望不大，但还是尽了自己的全力。</p><p>现在，已经在公司实习了，说实话，其实一开始，我总是抱怨，别人找到工作后到处去浪，各种嗨，就像是过年了，然而我们却还没蹦哒几天就又要开始做项目了，而且合同一签就是六个月。</p><p>不过现在的我居然不会那么想了。</p><p>因为老师说，我们跟入职的研究生差距还很大，必须得通过实习期再培训下学习能力和知识，尽量把差距拉到最小。</p><p>记得初中的时候，我舅舅对我说，上帝很公平，人的一生是遵循能量守恒的，你前半生过的舒坦了，那么后半生就要吃苦了，然后当你年轻的时候奋斗了，后半生就很轻松了。到现在快一个月了，我的心态却完全不一样了，我好像喜欢上这种感觉了，因为每天学习都很快乐，我们不是一群码农，以前老师不在的时候，我几乎是有时间就跑，后来我总喜欢呆到很晚才回去，与老师在不在无关了，好像不知不觉就成另一种习惯，我们每天都会学习新的东西，我们很自由，很快乐，我喜欢这样的学习氛围，我们扮演者开发中的不同角色，我们有各种各样地写代码的形式，有人问我累吗，我想说后来的我再没有想过累与不累，因为一切都是心甘情愿，甚至简单到只是因为最初的兴趣和现在的喜欢还有对未来的执着。</p><h3 id="要对得起你的梦想"><a href="#要对得起你的梦想" class="headerlink" title="要对得起你的梦想"></a>要对得起你的梦想</h3><p>在这里顺便回答一个曾经看到的老师问的问题。关于梦想，我进实验室前，我的梦想是找一份软件方面的工作，进了实验室后，我的梦想是能进像 TW 这样的软件公司，当我通过 TW 面试的时候，我的梦想是像公司的大牛一样努力成为一名全栈工程师，还有这一路走来唯一一个我坚持了很久没有变的梦想就是让我爸妈过上我想要他们过的生活。</p><p>最后，很喜欢的两句话送给你</p><ul><li><strong>一个人如果不逼自己，那就永远也不知道自己有多优秀</strong></li><li><strong>累就对了，舒服是留给死人的</strong></li></ul><p><img src="http://upload-images.jianshu.io/upload_images/2190281-61a0c4517185f846.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="好了，不装逼了，去改Bug了"></p><p><strong>我是半生不熟 喜欢照自己的怪念头行事<br>喜欢一切意外 想把生活过成诗的样子<br>若哪天有幸相遇 请别诧异 其实我并不是个乖孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;三年前&quot;&gt;&lt;a href=&quot;#三年前&quot; class=&quot;headerlink&quot; title=&quot;三年前&quot;&gt;&lt;/a&gt;&lt;strong&gt;三年前&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;记得填高考志愿的那天，我们一家人信心满满，第一志愿报了西安邮电大学的通信工程专业，觉得肯定能录上，
      
    
    </summary>
    
      <category term="大学" scheme="https://www.wdanna.com/%E5%A4%A7%E5%AD%A6/"/>
    
    
  </entry>
  
</feed>
